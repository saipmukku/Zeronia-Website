{"ast":null,"code":"/**\n * Anime.js - core - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { rgbExecRgx, rgbaExecRgx, hslExecRgx, hslaExecRgx } from './consts.js';\nimport { isRgb, isHex, isHsl, isUnd, round } from './helpers.js';\n\n/**\n * @import {\n *   ColorArray,\n * } from '../types/index.js'\n*/\n\n/**\n * RGB / RGBA Color value string -> RGBA values array\n * @param  {String} rgbValue\n * @return {ColorArray}\n */\nconst rgbToRgba = rgbValue => {\n  const rgba = rgbExecRgx.exec(rgbValue) || rgbaExecRgx.exec(rgbValue);\n  const a = !isUnd(rgba[4]) ? +rgba[4] : 1;\n  return [+rgba[1], +rgba[2], +rgba[3], a];\n};\n\n/**\n * HEX3 / HEX3A / HEX6 / HEX6A Color value string -> RGBA values array\n * @param  {String} hexValue\n * @return {ColorArray}\n */\nconst hexToRgba = hexValue => {\n  const hexLength = hexValue.length;\n  const isShort = hexLength === 4 || hexLength === 5;\n  return [+('0x' + hexValue[1] + hexValue[isShort ? 1 : 2]), +('0x' + hexValue[isShort ? 2 : 3] + hexValue[isShort ? 2 : 4]), +('0x' + hexValue[isShort ? 3 : 5] + hexValue[isShort ? 3 : 6]), hexLength === 5 || hexLength === 9 ? +(+('0x' + hexValue[isShort ? 4 : 7] + hexValue[isShort ? 4 : 8]) / 255).toFixed(3) : 1];\n};\n\n/**\n * @param  {Number} p\n * @param  {Number} q\n * @param  {Number} t\n * @return {Number}\n */\nconst hue2rgb = (p, q, t) => {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  return t < 1 / 6 ? p + (q - p) * 6 * t : t < 1 / 2 ? q : t < 2 / 3 ? p + (q - p) * (2 / 3 - t) * 6 : p;\n};\n\n/**\n * HSL / HSLA Color value string -> RGBA values array\n * @param  {String} hslValue\n * @return {ColorArray}\n */\nconst hslToRgba = hslValue => {\n  const hsla = hslExecRgx.exec(hslValue) || hslaExecRgx.exec(hslValue);\n  const h = +hsla[1] / 360;\n  const s = +hsla[2] / 100;\n  const l = +hsla[3] / 100;\n  const a = !isUnd(hsla[4]) ? +hsla[4] : 1;\n  let r, g, b;\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    const q = l < .5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = round(hue2rgb(p, q, h + 1 / 3) * 255, 0);\n    g = round(hue2rgb(p, q, h) * 255, 0);\n    b = round(hue2rgb(p, q, h - 1 / 3) * 255, 0);\n  }\n  return [r, g, b, a];\n};\n\n/**\n * All in one color converter that converts a color string value into an array of RGBA values\n * @param  {String} colorString\n * @return {ColorArray}\n */\nconst convertColorStringValuesToRgbaArray = colorString => {\n  return isRgb(colorString) ? rgbToRgba(colorString) : isHex(colorString) ? hexToRgba(colorString) : isHsl(colorString) ? hslToRgba(colorString) : [0, 0, 0, 1];\n};\nexport { convertColorStringValuesToRgbaArray };","map":{"version":3,"names":["rgbExecRgx","rgbaExecRgx","hslExecRgx","hslaExecRgx","isRgb","isHex","isHsl","isUnd","round","rgbToRgba","rgbValue","rgba","exec","a","hexToRgba","hexValue","hexLength","length","isShort","toFixed","hue2rgb","p","q","t","hslToRgba","hslValue","hsla","h","s","l","r","g","b","convertColorStringValuesToRgbaArray","colorString"],"sources":["/Users/mukku/Desktop/Work and Education/Projects/zeronia.org/node_modules/animejs/dist/modules/core/colors.js"],"sourcesContent":["/**\n * Anime.js - core - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { rgbExecRgx, rgbaExecRgx, hslExecRgx, hslaExecRgx } from './consts.js';\nimport { isRgb, isHex, isHsl, isUnd, round } from './helpers.js';\n\n/**\n * @import {\n *   ColorArray,\n * } from '../types/index.js'\n*/\n\n/**\n * RGB / RGBA Color value string -> RGBA values array\n * @param  {String} rgbValue\n * @return {ColorArray}\n */\nconst rgbToRgba = rgbValue => {\n  const rgba = rgbExecRgx.exec(rgbValue) || rgbaExecRgx.exec(rgbValue);\n  const a = !isUnd(rgba[4]) ? +rgba[4] : 1;\n  return [\n    +rgba[1],\n    +rgba[2],\n    +rgba[3],\n    a\n  ]\n};\n\n/**\n * HEX3 / HEX3A / HEX6 / HEX6A Color value string -> RGBA values array\n * @param  {String} hexValue\n * @return {ColorArray}\n */\nconst hexToRgba = hexValue => {\n  const hexLength = hexValue.length;\n  const isShort = hexLength === 4 || hexLength === 5;\n  return [\n    +('0x' + hexValue[1] + hexValue[isShort ? 1 : 2]),\n    +('0x' + hexValue[isShort ? 2 : 3] + hexValue[isShort ? 2 : 4]),\n    +('0x' + hexValue[isShort ? 3 : 5] + hexValue[isShort ? 3 : 6]),\n    ((hexLength === 5 || hexLength === 9) ? +(+('0x' + hexValue[isShort ? 4 : 7] + hexValue[isShort ? 4 : 8]) / 255).toFixed(3) : 1)\n  ]\n};\n\n/**\n * @param  {Number} p\n * @param  {Number} q\n * @param  {Number} t\n * @return {Number}\n */\nconst hue2rgb = (p, q, t) => {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  return t < 1 / 6 ? p + (q - p) * 6 * t :\n         t < 1 / 2 ? q :\n         t < 2 / 3 ? p + (q - p) * (2 / 3 - t) * 6 :\n         p;\n};\n\n/**\n * HSL / HSLA Color value string -> RGBA values array\n * @param  {String} hslValue\n * @return {ColorArray}\n */\nconst hslToRgba = hslValue => {\n  const hsla = hslExecRgx.exec(hslValue) || hslaExecRgx.exec(hslValue);\n  const h = +hsla[1] / 360;\n  const s = +hsla[2] / 100;\n  const l = +hsla[3] / 100;\n  const a = !isUnd(hsla[4]) ? +hsla[4] : 1;\n  let r, g, b;\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    const q = l < .5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = round(hue2rgb(p, q, h + 1 / 3) * 255, 0);\n    g = round(hue2rgb(p, q, h) * 255, 0);\n    b = round(hue2rgb(p, q, h - 1 / 3) * 255, 0);\n  }\n  return [r, g, b, a];\n};\n\n/**\n * All in one color converter that converts a color string value into an array of RGBA values\n * @param  {String} colorString\n * @return {ColorArray}\n */\nconst convertColorStringValuesToRgbaArray = colorString => {\n  return isRgb(colorString) ? rgbToRgba(colorString) :\n         isHex(colorString) ? hexToRgba(colorString) :\n         isHsl(colorString) ? hslToRgba(colorString) :\n         [0, 0, 0, 1];\n};\n\nexport { convertColorStringValuesToRgbaArray };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}