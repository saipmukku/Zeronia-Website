{"ast":null,"code":"/**\n * Anime.js - core - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { tweenTypes, shortTransforms, isDomSymbol, transformsSymbol, transformsFragmentStrings, emptyString } from './consts.js';\nimport { forEachChildren, isSvg, toLowerCase, isNil } from './helpers.js';\n\n/**\n * @import {\n *   JSAnimation,\n * } from '../animation/animation.js'\n*/\n\n/**\n* @import {\n*   Target,\n*   DOMTarget,\n*   Renderable,\n*   Tween,\n* } from '../types/index.js'\n*/\n\nconst propertyNamesCache = {};\n\n/**\n * @param  {String} propertyName\n * @param  {Target} target\n * @param  {tweenTypes} tweenType\n * @return {String}\n */\nconst sanitizePropertyName = (propertyName, target, tweenType) => {\n  if (tweenType === tweenTypes.TRANSFORM) {\n    const t = shortTransforms.get(propertyName);\n    return t ? t : propertyName;\n  } else if (tweenType === tweenTypes.CSS ||\n  // Handle special cases where properties like \"strokeDashoffset\" needs to be set as \"stroke-dashoffset\"\n  // but properties like \"baseFrequency\" should stay in lowerCamelCase\n  tweenType === tweenTypes.ATTRIBUTE && isSvg(target) && propertyName in /** @type {DOMTarget} */target.style) {\n    const cachedPropertyName = propertyNamesCache[propertyName];\n    if (cachedPropertyName) {\n      return cachedPropertyName;\n    } else {\n      const lowerCaseName = propertyName ? toLowerCase(propertyName) : propertyName;\n      propertyNamesCache[propertyName] = lowerCaseName;\n      return lowerCaseName;\n    }\n  } else {\n    return propertyName;\n  }\n};\n\n/**\n * @template {Renderable} T\n * @param {T} renderable\n * @return {T}\n */\nconst cleanInlineStyles = renderable => {\n  // Allow cleanInlineStyles() to be called on timelines\n  if (renderable._hasChildren) {\n    forEachChildren(renderable, cleanInlineStyles, true);\n  } else {\n    const animation = /** @type {JSAnimation} */renderable;\n    animation.pause();\n    forEachChildren(animation, (/** @type {Tween} */tween) => {\n      const tweenProperty = tween.property;\n      const tweenTarget = tween.target;\n      if (tweenTarget[isDomSymbol]) {\n        const targetStyle = /** @type {DOMTarget} */tweenTarget.style;\n        const originalInlinedValue = tween._inlineValue;\n        const tweenHadNoInlineValue = isNil(originalInlinedValue) || originalInlinedValue === emptyString;\n        if (tween._tweenType === tweenTypes.TRANSFORM) {\n          const cachedTransforms = tweenTarget[transformsSymbol];\n          if (tweenHadNoInlineValue) {\n            delete cachedTransforms[tweenProperty];\n          } else {\n            cachedTransforms[tweenProperty] = originalInlinedValue;\n          }\n          if (tween._renderTransforms) {\n            if (!Object.keys(cachedTransforms).length) {\n              targetStyle.removeProperty('transform');\n            } else {\n              let str = emptyString;\n              for (let key in cachedTransforms) {\n                str += transformsFragmentStrings[key] + cachedTransforms[key] + ') ';\n              }\n              targetStyle.transform = str;\n            }\n          }\n        } else {\n          if (tweenHadNoInlineValue) {\n            targetStyle.removeProperty(toLowerCase(tweenProperty));\n          } else {\n            targetStyle[tweenProperty] = originalInlinedValue;\n          }\n        }\n        if (animation._tail === tween) {\n          animation.targets.forEach(t => {\n            if (t.getAttribute && t.getAttribute('style') === emptyString) {\n              t.removeAttribute('style');\n            }\n          });\n        }\n      }\n    });\n  }\n  return renderable;\n};\nexport { cleanInlineStyles, sanitizePropertyName };","map":{"version":3,"names":["tweenTypes","shortTransforms","isDomSymbol","transformsSymbol","transformsFragmentStrings","emptyString","forEachChildren","isSvg","toLowerCase","isNil","propertyNamesCache","sanitizePropertyName","propertyName","target","tweenType","TRANSFORM","t","get","CSS","ATTRIBUTE","style","cachedPropertyName","lowerCaseName","cleanInlineStyles","renderable","_hasChildren","animation","pause","tween","tweenProperty","property","tweenTarget","targetStyle","originalInlinedValue","_inlineValue","tweenHadNoInlineValue","_tweenType","cachedTransforms","_renderTransforms","Object","keys","length","removeProperty","str","key","transform","_tail","targets","forEach","getAttribute","removeAttribute"],"sources":["/Users/mukku/Desktop/Work and Education/Projects/zeronia.org/node_modules/animejs/dist/modules/core/styles.js"],"sourcesContent":["/**\n * Anime.js - core - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { tweenTypes, shortTransforms, isDomSymbol, transformsSymbol, transformsFragmentStrings, emptyString } from './consts.js';\nimport { forEachChildren, isSvg, toLowerCase, isNil } from './helpers.js';\n\n/**\n * @import {\n *   JSAnimation,\n * } from '../animation/animation.js'\n*/\n\n/**\n* @import {\n*   Target,\n*   DOMTarget,\n*   Renderable,\n*   Tween,\n* } from '../types/index.js'\n*/\n\nconst propertyNamesCache = {};\n\n/**\n * @param  {String} propertyName\n * @param  {Target} target\n * @param  {tweenTypes} tweenType\n * @return {String}\n */\nconst sanitizePropertyName = (propertyName, target, tweenType) => {\n  if (tweenType === tweenTypes.TRANSFORM) {\n    const t = shortTransforms.get(propertyName);\n    return t ? t : propertyName;\n  } else if (\n    tweenType === tweenTypes.CSS ||\n    // Handle special cases where properties like \"strokeDashoffset\" needs to be set as \"stroke-dashoffset\"\n    // but properties like \"baseFrequency\" should stay in lowerCamelCase\n    (tweenType === tweenTypes.ATTRIBUTE && (isSvg(target) && propertyName in /** @type {DOMTarget} */(target).style))\n  ) {\n    const cachedPropertyName = propertyNamesCache[propertyName];\n    if (cachedPropertyName) {\n      return cachedPropertyName;\n    } else {\n      const lowerCaseName = propertyName ? toLowerCase(propertyName) : propertyName;\n      propertyNamesCache[propertyName] = lowerCaseName;\n      return lowerCaseName;\n    }\n  } else {\n    return propertyName;\n  }\n};\n\n/**\n * @template {Renderable} T\n * @param {T} renderable\n * @return {T}\n */\nconst cleanInlineStyles = renderable => {\n  // Allow cleanInlineStyles() to be called on timelines\n  if (renderable._hasChildren) {\n    forEachChildren(renderable, cleanInlineStyles, true);\n  } else {\n    const animation = /** @type {JSAnimation} */(renderable);\n    animation.pause();\n    forEachChildren(animation, (/** @type {Tween} */tween) => {\n      const tweenProperty = tween.property;\n      const tweenTarget = tween.target;\n      if (tweenTarget[isDomSymbol]) {\n        const targetStyle = /** @type {DOMTarget} */(tweenTarget).style;\n        const originalInlinedValue = tween._inlineValue;\n        const tweenHadNoInlineValue = isNil(originalInlinedValue) || originalInlinedValue === emptyString;\n        if (tween._tweenType === tweenTypes.TRANSFORM) {\n          const cachedTransforms = tweenTarget[transformsSymbol];\n          if (tweenHadNoInlineValue) {\n            delete cachedTransforms[tweenProperty];\n          } else {\n            cachedTransforms[tweenProperty] = originalInlinedValue;\n          }\n          if (tween._renderTransforms) {\n            if (!Object.keys(cachedTransforms).length) {\n              targetStyle.removeProperty('transform');\n            } else {\n              let str = emptyString;\n              for (let key in cachedTransforms) {\n                str += transformsFragmentStrings[key] + cachedTransforms[key] + ') ';\n              }\n              targetStyle.transform = str;\n            }\n          }\n        } else {\n          if (tweenHadNoInlineValue) {\n            targetStyle.removeProperty(toLowerCase(tweenProperty));\n          } else {\n            targetStyle[tweenProperty] = originalInlinedValue;\n          }\n        }\n        if (animation._tail === tween) {\n          animation.targets.forEach(t => {\n            if (t.getAttribute && t.getAttribute('style') === emptyString) {\n              t.removeAttribute('style');\n            }          });\n        }\n      }\n    });\n  }\n  return renderable;\n};\n\nexport { cleanInlineStyles, sanitizePropertyName };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}