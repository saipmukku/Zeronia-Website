{"ast":null,"code":"/**\n * Anime.js - engine - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { globalVersions, defaults, globals } from '../core/globals.js';\nimport { isBrowser, doc, tickModes, K } from '../core/consts.js';\nimport { now, removeChild, forEachChildren } from '../core/helpers.js';\nimport { Clock } from '../core/clock.js';\nimport { tick } from '../core/render.js';\nimport { additive } from '../animation/additive.js';\n\n/**\n * @import {\n *   DefaultsParams,\n * } from '../types/index.js'\n*/\n\n/**\n * @import {\n *   Tickable,\n * } from '../types/index.js'\n*/\n\nconst engineTickMethod = /*#__PURE__*/(() => isBrowser ? requestAnimationFrame : setImmediate)();\nconst engineCancelMethod = /*#__PURE__*/(() => isBrowser ? cancelAnimationFrame : clearImmediate)();\nclass Engine extends Clock {\n  /** @param {Number} [initTime] */\n  constructor(initTime) {\n    super(initTime);\n    this.useDefaultMainLoop = true;\n    this.pauseOnDocumentHidden = true;\n    /** @type {DefaultsParams} */\n    this.defaults = defaults;\n    // this.paused = isBrowser && doc.hidden ? true  : false;\n    this.paused = true;\n    /** @type {Number|NodeJS.Immediate} */\n    this.reqId = 0;\n  }\n  update() {\n    const time = this._currentTime = now();\n    if (this.requestTick(time)) {\n      this.computeDeltaTime(time);\n      const engineSpeed = this._speed;\n      const engineFps = this._fps;\n      let activeTickable = /** @type {Tickable} */this._head;\n      while (activeTickable) {\n        const nextTickable = activeTickable._next;\n        if (!activeTickable.paused) {\n          tick(activeTickable, (time - activeTickable._startTime) * activeTickable._speed * engineSpeed, 0,\n          // !muteCallbacks\n          0,\n          // !internalRender\n          activeTickable._fps < engineFps ? activeTickable.requestTick(time) : tickModes.AUTO);\n        } else {\n          removeChild(this, activeTickable);\n          this._hasChildren = !!this._tail;\n          activeTickable._running = false;\n          if (activeTickable.completed && !activeTickable._cancelled) {\n            activeTickable.cancel();\n          }\n        }\n        activeTickable = nextTickable;\n      }\n      additive.update();\n    }\n  }\n  wake() {\n    if (this.useDefaultMainLoop && !this.reqId) {\n      // Imediatly request a tick to update engine._elapsedTime and get accurate offsetPosition calculation in timer.js\n      this.requestTick(now());\n      this.reqId = engineTickMethod(tickEngine);\n    }\n    return this;\n  }\n  pause() {\n    if (!this.reqId) return;\n    this.paused = true;\n    return killEngine();\n  }\n  resume() {\n    if (!this.paused) return;\n    this.paused = false;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.resetTime());\n    return this.wake();\n  }\n\n  // Getter and setter for speed\n  get speed() {\n    return this._speed * (globals.timeScale === 1 ? 1 : K);\n  }\n  set speed(playbackRate) {\n    this._speed = playbackRate * globals.timeScale;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.speed = child._speed);\n  }\n\n  // Getter and setter for timeUnit\n  get timeUnit() {\n    return globals.timeScale === 1 ? 'ms' : 's';\n  }\n  set timeUnit(unit) {\n    const secondsScale = 0.001;\n    const isSecond = unit === 's';\n    const newScale = isSecond ? secondsScale : 1;\n    if (globals.timeScale !== newScale) {\n      globals.timeScale = newScale;\n      globals.tickThreshold = 200 * newScale;\n      const scaleFactor = isSecond ? secondsScale : K;\n      /** @type {Number} */\n      this.defaults.duration *= scaleFactor;\n      this._speed *= scaleFactor;\n    }\n  }\n\n  // Getter and setter for precision\n  get precision() {\n    return globals.precision;\n  }\n  set precision(precision) {\n    globals.precision = precision;\n  }\n}\nconst engine = /*#__PURE__*/(() => {\n  const engine = new Engine(now());\n  if (isBrowser) {\n    globalVersions.engine = engine;\n    doc.addEventListener('visibilitychange', () => {\n      if (!engine.pauseOnDocumentHidden) return;\n      doc.hidden ? engine.pause() : engine.resume();\n    });\n  }\n  return engine;\n})();\nconst tickEngine = () => {\n  if (engine._head) {\n    engine.reqId = engineTickMethod(tickEngine);\n    engine.update();\n  } else {\n    engine.reqId = 0;\n  }\n};\nconst killEngine = () => {\n  engineCancelMethod(/** @type {NodeJS.Immediate & Number} */engine.reqId);\n  engine.reqId = 0;\n  return engine;\n};\nexport { engine };","map":{"version":3,"names":["globalVersions","defaults","globals","isBrowser","doc","tickModes","K","now","removeChild","forEachChildren","Clock","tick","additive","engineTickMethod","requestAnimationFrame","setImmediate","engineCancelMethod","cancelAnimationFrame","clearImmediate","Engine","constructor","initTime","useDefaultMainLoop","pauseOnDocumentHidden","paused","reqId","update","time","_currentTime","requestTick","computeDeltaTime","engineSpeed","_speed","engineFps","_fps","activeTickable","_head","nextTickable","_next","_startTime","AUTO","_hasChildren","_tail","_running","completed","_cancelled","cancel","wake","tickEngine","pause","killEngine","resume","child","resetTime","speed","timeScale","playbackRate","timeUnit","unit","secondsScale","isSecond","newScale","tickThreshold","scaleFactor","duration","precision","engine","addEventListener","hidden"],"sources":["/Users/mukku/Desktop/Work and Education/Projects/zeronia.org/node_modules/animejs/dist/modules/engine/engine.js"],"sourcesContent":["/**\n * Anime.js - engine - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { globalVersions, defaults, globals } from '../core/globals.js';\nimport { isBrowser, doc, tickModes, K } from '../core/consts.js';\nimport { now, removeChild, forEachChildren } from '../core/helpers.js';\nimport { Clock } from '../core/clock.js';\nimport { tick } from '../core/render.js';\nimport { additive } from '../animation/additive.js';\n\n/**\n * @import {\n *   DefaultsParams,\n * } from '../types/index.js'\n*/\n\n/**\n * @import {\n *   Tickable,\n * } from '../types/index.js'\n*/\n\nconst engineTickMethod = /*#__PURE__*/ (() => isBrowser ? requestAnimationFrame : setImmediate)();\nconst engineCancelMethod = /*#__PURE__*/ (() => isBrowser ? cancelAnimationFrame : clearImmediate)();\n\nclass Engine extends Clock {\n\n  /** @param {Number} [initTime] */\n  constructor(initTime) {\n    super(initTime);\n    this.useDefaultMainLoop = true;\n    this.pauseOnDocumentHidden = true;\n    /** @type {DefaultsParams} */\n    this.defaults = defaults;\n    // this.paused = isBrowser && doc.hidden ? true  : false;\n    this.paused = true;\n    /** @type {Number|NodeJS.Immediate} */\n    this.reqId = 0;\n  }\n\n  update() {\n    const time = this._currentTime = now();\n    if (this.requestTick(time)) {\n      this.computeDeltaTime(time);\n      const engineSpeed = this._speed;\n      const engineFps = this._fps;\n      let activeTickable = /** @type {Tickable} */(this._head);\n      while (activeTickable) {\n        const nextTickable = activeTickable._next;\n        if (!activeTickable.paused) {\n          tick(\n            activeTickable,\n            (time - activeTickable._startTime) * activeTickable._speed * engineSpeed,\n            0, // !muteCallbacks\n            0, // !internalRender\n            activeTickable._fps < engineFps ? activeTickable.requestTick(time) : tickModes.AUTO\n          );\n        } else {\n          removeChild(this, activeTickable);\n          this._hasChildren = !!this._tail;\n          activeTickable._running = false;\n          if (activeTickable.completed && !activeTickable._cancelled) {\n            activeTickable.cancel();\n          }\n        }\n        activeTickable = nextTickable;\n      }\n      additive.update();\n    }\n  }\n\n  wake() {\n    if (this.useDefaultMainLoop && !this.reqId) {\n      // Imediatly request a tick to update engine._elapsedTime and get accurate offsetPosition calculation in timer.js\n      this.requestTick(now());\n      this.reqId = engineTickMethod(tickEngine);\n    }\n    return this;\n  }\n\n  pause() {\n    if (!this.reqId) return;\n    this.paused = true;\n    return killEngine();\n  }\n\n  resume() {\n    if (!this.paused) return;\n    this.paused = false;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.resetTime());\n    return this.wake();\n  }\n\n  // Getter and setter for speed\n  get speed() {\n    return this._speed * (globals.timeScale === 1 ? 1 : K);\n  }\n\n  set speed(playbackRate) {\n    this._speed = playbackRate * globals.timeScale;\n    forEachChildren(this, (/** @type {Tickable} */child) => child.speed = child._speed);\n  }\n\n  // Getter and setter for timeUnit\n  get timeUnit() {\n    return globals.timeScale === 1 ? 'ms' : 's';\n  }\n\n  set timeUnit(unit) {\n    const secondsScale = 0.001;\n    const isSecond = unit === 's';\n    const newScale = isSecond ? secondsScale : 1;\n    if (globals.timeScale !== newScale) {\n      globals.timeScale = newScale;\n      globals.tickThreshold = 200 * newScale;\n      const scaleFactor = isSecond ? secondsScale : K;\n      /** @type {Number} */\n      (this.defaults.duration) *= scaleFactor;\n      this._speed *= scaleFactor;\n    }\n  }\n\n  // Getter and setter for precision\n  get precision() {\n    return globals.precision;\n  }\n\n  set precision(precision) {\n    globals.precision = precision;\n  }\n\n}\n\nconst engine = /*#__PURE__*/(() => {\n  const engine = new Engine(now());\n  if (isBrowser) {\n    globalVersions.engine = engine;\n    doc.addEventListener('visibilitychange', () => {\n      if (!engine.pauseOnDocumentHidden) return;\n      doc.hidden ? engine.pause() : engine.resume();\n    });\n  }\n  return engine;\n})();\n\n\nconst tickEngine = () => {\n  if (engine._head) {\n    engine.reqId = engineTickMethod(tickEngine);\n    engine.update();\n  } else {\n    engine.reqId = 0;\n  }\n};\n\nconst killEngine = () => {\n  engineCancelMethod(/** @type {NodeJS.Immediate & Number} */(engine.reqId));\n  engine.reqId = 0;\n  return engine;\n};\n\nexport { engine };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}