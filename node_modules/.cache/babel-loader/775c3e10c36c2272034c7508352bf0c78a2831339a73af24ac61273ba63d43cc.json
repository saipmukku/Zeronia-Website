{"ast":null,"code":"/**\n * Anime.js - scope - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { doc, win } from '../core/consts.js';\nimport { globals, scope } from '../core/globals.js';\nimport { mergeObjects, isFnc } from '../core/helpers.js';\nimport { parseTargets } from '../core/targets.js';\nimport { keepTime } from '../utils/time.js';\n\n/**\n * @import {\n *   Tickable,\n *   ScopeParams,\n *   DOMTarget,\n *   ReactRef,\n *   AngularRef,\n *   DOMTargetSelector,\n *   DefaultsParams,\n *   ScopeConstructorCallback,\n *   ScopeCleanupCallback,\n *   Revertible,\n *   ScopeMethod,\n *   ScopedCallback,\n * } from '../types/index.js'\n*/\n\nclass Scope {\n  /** @param {ScopeParams} [parameters] */\n  constructor(parameters = {}) {\n    if (scope.current) scope.current.register(this);\n    const rootParam = parameters.root;\n    /** @type {Document|DOMTarget} */\n    let root = doc;\n    if (rootParam) {\n      root = /** @type {ReactRef} */rootParam.current || /** @type {AngularRef} */rootParam.nativeElement || parseTargets(/** @type {DOMTargetSelector} */rootParam)[0] || doc;\n    }\n    const scopeDefaults = parameters.defaults;\n    const globalDefault = globals.defaults;\n    const mediaQueries = parameters.mediaQueries;\n    /** @type {DefaultsParams} */\n    this.defaults = scopeDefaults ? mergeObjects(scopeDefaults, globalDefault) : globalDefault;\n    /** @type {Document|DOMTarget} */\n    this.root = root;\n    /** @type {Array<ScopeConstructorCallback>} */\n    this.constructors = [];\n    /** @type {Array<ScopeCleanupCallback>} */\n    this.revertConstructors = [];\n    /** @type {Array<Revertible>} */\n    this.revertibles = [];\n    /** @type {Array<ScopeConstructorCallback | ((scope: this) => Tickable)>} */\n    this.constructorsOnce = [];\n    /** @type {Array<ScopeCleanupCallback>} */\n    this.revertConstructorsOnce = [];\n    /** @type {Array<Revertible>} */\n    this.revertiblesOnce = [];\n    /** @type {Boolean} */\n    this.once = false;\n    /** @type {Number} */\n    this.onceIndex = 0;\n    /** @type {Record<String, ScopeMethod>} */\n    this.methods = {};\n    /** @type {Record<String, Boolean>} */\n    this.matches = {};\n    /** @type {Record<String, MediaQueryList>} */\n    this.mediaQueryLists = {};\n    /** @type {Record<String, any>} */\n    this.data = {};\n    if (mediaQueries) {\n      for (let mq in mediaQueries) {\n        const _mq = win.matchMedia(mediaQueries[mq]);\n        this.mediaQueryLists[mq] = _mq;\n        _mq.addEventListener('change', this);\n      }\n    }\n  }\n\n  /**\n   * @param {Revertible} revertible\n   */\n  register(revertible) {\n    const store = this.once ? this.revertiblesOnce : this.revertibles;\n    store.push(revertible);\n  }\n\n  /**\n   * @template T\n   * @param {ScopedCallback<T>} cb\n   * @return {T}\n   */\n  execute(cb) {\n    let activeScope = scope.current;\n    let activeRoot = scope.root;\n    let activeDefaults = globals.defaults;\n    scope.current = this;\n    scope.root = this.root;\n    globals.defaults = this.defaults;\n    const mqs = this.mediaQueryLists;\n    for (let mq in mqs) this.matches[mq] = mqs[mq].matches;\n    const returned = cb(this);\n    scope.current = activeScope;\n    scope.root = activeRoot;\n    globals.defaults = activeDefaults;\n    return returned;\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    this.onceIndex = 0;\n    this.execute(() => {\n      let i = this.revertibles.length;\n      let y = this.revertConstructors.length;\n      while (i--) this.revertibles[i].revert();\n      while (y--) this.revertConstructors[y](this);\n      this.revertibles.length = 0;\n      this.revertConstructors.length = 0;\n      this.constructors.forEach((/** @type {ScopeConstructorCallback} */constructor) => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * @overload\n   * @param {String} a1\n   * @param {ScopeMethod} a2\n   * @return {this}\n   *\n   * @overload\n   * @param {ScopeConstructorCallback} a1\n   * @return {this}\n   *\n   * @param {String|ScopeConstructorCallback} a1\n   * @param {ScopeMethod} [a2]\n   */\n  add(a1, a2) {\n    this.once = false;\n    if (isFnc(a1)) {\n      const constructor = /** @type {ScopeConstructorCallback} */a1;\n      this.constructors.push(constructor);\n      this.execute(() => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    } else {\n      this.methods[(/** @type {String} */a1)] = (/** @type {any} */...args) => this.execute(() => a2(...args));\n    }\n    return this;\n  }\n\n  /**\n   * @param {ScopeConstructorCallback} scopeConstructorCallback\n   * @return {this}\n   */\n  addOnce(scopeConstructorCallback) {\n    this.once = true;\n    if (isFnc(scopeConstructorCallback)) {\n      const currentIndex = this.onceIndex++;\n      const tracked = this.constructorsOnce[currentIndex];\n      if (tracked) return this;\n      const constructor = /** @type {ScopeConstructorCallback} */scopeConstructorCallback;\n      this.constructorsOnce[currentIndex] = constructor;\n      this.execute(() => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructorsOnce.push(revertConstructor);\n        }\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @param  {(scope: this) => Tickable} cb\n   * @return {Tickable}\n   */\n  keepTime(cb) {\n    this.once = true;\n    const currentIndex = this.onceIndex++;\n    const tracked = /** @type {(scope: this) => Tickable} */this.constructorsOnce[currentIndex];\n    if (isFnc(tracked)) return tracked(this);\n    const constructor = /** @type {(scope: this) => Tickable} */keepTime(cb);\n    this.constructorsOnce[currentIndex] = constructor;\n    let trackedTickable;\n    this.execute(() => {\n      trackedTickable = constructor(this);\n    });\n    return trackedTickable;\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'change':\n        this.refresh();\n        break;\n    }\n  }\n  revert() {\n    const revertibles = this.revertibles;\n    const revertConstructors = this.revertConstructors;\n    const revertiblesOnce = this.revertiblesOnce;\n    const revertConstructorsOnce = this.revertConstructorsOnce;\n    const mqs = this.mediaQueryLists;\n    let i = revertibles.length;\n    let j = revertConstructors.length;\n    let k = revertiblesOnce.length;\n    let l = revertConstructorsOnce.length;\n    while (i--) revertibles[i].revert();\n    while (j--) revertConstructors[j](this);\n    while (k--) revertiblesOnce[k].revert();\n    while (l--) revertConstructorsOnce[l](this);\n    for (let mq in mqs) mqs[mq].removeEventListener('change', this);\n    revertibles.length = 0;\n    revertConstructors.length = 0;\n    this.constructors.length = 0;\n    revertiblesOnce.length = 0;\n    revertConstructorsOnce.length = 0;\n    this.constructorsOnce.length = 0;\n    this.onceIndex = 0;\n    this.matches = {};\n    this.methods = {};\n    this.mediaQueryLists = {};\n    this.data = {};\n  }\n}\n\n/**\n * @param {ScopeParams} [params]\n * @return {Scope}\n */\nconst createScope = params => new Scope(params);\nexport { Scope, createScope };","map":{"version":3,"names":["doc","win","globals","scope","mergeObjects","isFnc","parseTargets","keepTime","Scope","constructor","parameters","current","register","rootParam","root","nativeElement","scopeDefaults","defaults","globalDefault","mediaQueries","constructors","revertConstructors","revertibles","constructorsOnce","revertConstructorsOnce","revertiblesOnce","once","onceIndex","methods","matches","mediaQueryLists","data","mq","_mq","matchMedia","addEventListener","revertible","store","push","execute","cb","activeScope","activeRoot","activeDefaults","mqs","returned","refresh","i","length","y","revert","forEach","revertConstructor","add","a1","a2","args","addOnce","scopeConstructorCallback","currentIndex","tracked","trackedTickable","handleEvent","e","type","j","k","l","removeEventListener","createScope","params"],"sources":["/Users/mukku/Desktop/Work and Education/Projects/zeronia.org/node_modules/animejs/dist/modules/scope/scope.js"],"sourcesContent":["/**\n * Anime.js - scope - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { doc, win } from '../core/consts.js';\nimport { globals, scope } from '../core/globals.js';\nimport { mergeObjects, isFnc } from '../core/helpers.js';\nimport { parseTargets } from '../core/targets.js';\nimport { keepTime } from '../utils/time.js';\n\n/**\n * @import {\n *   Tickable,\n *   ScopeParams,\n *   DOMTarget,\n *   ReactRef,\n *   AngularRef,\n *   DOMTargetSelector,\n *   DefaultsParams,\n *   ScopeConstructorCallback,\n *   ScopeCleanupCallback,\n *   Revertible,\n *   ScopeMethod,\n *   ScopedCallback,\n * } from '../types/index.js'\n*/\n\nclass Scope {\n  /** @param {ScopeParams} [parameters] */\n  constructor(parameters = {}) {\n    if (scope.current) scope.current.register(this);\n    const rootParam = parameters.root;\n    /** @type {Document|DOMTarget} */\n    let root = doc;\n    if (rootParam) {\n      root = /** @type {ReactRef} */(rootParam).current ||\n             /** @type {AngularRef} */(rootParam).nativeElement ||\n             parseTargets(/** @type {DOMTargetSelector} */(rootParam))[0] ||\n             doc;\n    }\n    const scopeDefaults = parameters.defaults;\n    const globalDefault = globals.defaults;\n    const mediaQueries = parameters.mediaQueries;\n    /** @type {DefaultsParams} */\n    this.defaults = scopeDefaults ? mergeObjects(scopeDefaults, globalDefault) : globalDefault;\n    /** @type {Document|DOMTarget} */\n    this.root = root;\n    /** @type {Array<ScopeConstructorCallback>} */\n    this.constructors = [];\n    /** @type {Array<ScopeCleanupCallback>} */\n    this.revertConstructors = [];\n    /** @type {Array<Revertible>} */\n    this.revertibles = [];\n    /** @type {Array<ScopeConstructorCallback | ((scope: this) => Tickable)>} */\n    this.constructorsOnce = [];\n    /** @type {Array<ScopeCleanupCallback>} */\n    this.revertConstructorsOnce = [];\n    /** @type {Array<Revertible>} */\n    this.revertiblesOnce = [];\n    /** @type {Boolean} */\n    this.once = false;\n    /** @type {Number} */\n    this.onceIndex = 0;\n    /** @type {Record<String, ScopeMethod>} */\n    this.methods = {};\n    /** @type {Record<String, Boolean>} */\n    this.matches = {};\n    /** @type {Record<String, MediaQueryList>} */\n    this.mediaQueryLists = {};\n    /** @type {Record<String, any>} */\n    this.data = {};\n    if (mediaQueries) {\n      for (let mq in mediaQueries) {\n        const _mq = win.matchMedia(mediaQueries[mq]);\n        this.mediaQueryLists[mq] = _mq;\n        _mq.addEventListener('change', this);\n      }\n    }\n  }\n\n  /**\n   * @param {Revertible} revertible\n   */\n  register(revertible) {\n    const store = this.once ? this.revertiblesOnce : this.revertibles;\n    store.push(revertible);\n  }\n\n  /**\n   * @template T\n   * @param {ScopedCallback<T>} cb\n   * @return {T}\n   */\n  execute(cb) {\n    let activeScope = scope.current;\n    let activeRoot = scope.root;\n    let activeDefaults = globals.defaults;\n    scope.current = this;\n    scope.root = this.root;\n    globals.defaults = this.defaults;\n    const mqs = this.mediaQueryLists;\n    for (let mq in mqs) this.matches[mq] = mqs[mq].matches;\n    const returned = cb(this);\n    scope.current = activeScope;\n    scope.root = activeRoot;\n    globals.defaults = activeDefaults;\n    return returned;\n  }\n\n  /**\n   * @return {this}\n   */\n  refresh() {\n    this.onceIndex = 0;\n    this.execute(() => {\n      let i = this.revertibles.length;\n      let y = this.revertConstructors.length;\n      while (i--) this.revertibles[i].revert();\n      while (y--) this.revertConstructors[y](this);\n      this.revertibles.length = 0;\n      this.revertConstructors.length = 0;\n      this.constructors.forEach((/** @type {ScopeConstructorCallback} */constructor) => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * @overload\n   * @param {String} a1\n   * @param {ScopeMethod} a2\n   * @return {this}\n   *\n   * @overload\n   * @param {ScopeConstructorCallback} a1\n   * @return {this}\n   *\n   * @param {String|ScopeConstructorCallback} a1\n   * @param {ScopeMethod} [a2]\n   */\n  add(a1, a2) {\n    this.once = false;\n    if (isFnc(a1)) {\n      const constructor = /** @type {ScopeConstructorCallback} */(a1);\n      this.constructors.push(constructor);\n      this.execute(() => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructors.push(revertConstructor);\n        }\n      });\n    } else {\n      this.methods[/** @type {String} */(a1)] = (/** @type {any} */...args) => this.execute(() => a2(...args));\n    }\n    return this;\n  }\n\n  /**\n   * @param {ScopeConstructorCallback} scopeConstructorCallback\n   * @return {this}\n   */\n  addOnce(scopeConstructorCallback) {\n    this.once = true;\n    if (isFnc(scopeConstructorCallback)) {\n      const currentIndex = this.onceIndex++;\n      const tracked = this.constructorsOnce[currentIndex];\n      if (tracked) return this;\n      const constructor = /** @type {ScopeConstructorCallback} */(scopeConstructorCallback);\n      this.constructorsOnce[currentIndex] = constructor;\n      this.execute(() => {\n        const revertConstructor = constructor(this);\n        if (isFnc(revertConstructor)) {\n          this.revertConstructorsOnce.push(revertConstructor);\n        }\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @param  {(scope: this) => Tickable} cb\n   * @return {Tickable}\n   */\n  keepTime(cb) {\n    this.once = true;\n    const currentIndex = this.onceIndex++;\n    const tracked = /** @type {(scope: this) => Tickable} */(this.constructorsOnce[currentIndex]);\n    if (isFnc(tracked)) return tracked(this);\n    const constructor = /** @type {(scope: this) => Tickable} */(keepTime(cb));\n    this.constructorsOnce[currentIndex] = constructor;\n    let trackedTickable;\n    this.execute(() => {\n      trackedTickable = constructor(this);\n    });\n    return trackedTickable;\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleEvent(e) {\n    switch (e.type) {\n      case 'change':\n        this.refresh();\n        break;\n    }\n  }\n\n  revert() {\n    const revertibles = this.revertibles;\n    const revertConstructors = this.revertConstructors;\n    const revertiblesOnce = this.revertiblesOnce;\n    const revertConstructorsOnce = this.revertConstructorsOnce;\n    const mqs = this.mediaQueryLists;\n    let i = revertibles.length;\n    let j = revertConstructors.length;\n    let k = revertiblesOnce.length;\n    let l = revertConstructorsOnce.length;\n    while (i--) revertibles[i].revert();\n    while (j--) revertConstructors[j](this);\n    while (k--) revertiblesOnce[k].revert();\n    while (l--) revertConstructorsOnce[l](this);\n    for (let mq in mqs) mqs[mq].removeEventListener('change', this);\n    revertibles.length = 0;\n    revertConstructors.length = 0;\n    this.constructors.length = 0;\n    revertiblesOnce.length = 0;\n    revertConstructorsOnce.length = 0;\n    this.constructorsOnce.length = 0;\n    this.onceIndex = 0;\n    this.matches = {};\n    this.methods = {};\n    this.mediaQueryLists = {};\n    this.data = {};\n  }\n}\n\n/**\n * @param {ScopeParams} [params]\n * @return {Scope}\n */\nconst createScope = params => new Scope(params);\n\nexport { Scope, createScope };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}