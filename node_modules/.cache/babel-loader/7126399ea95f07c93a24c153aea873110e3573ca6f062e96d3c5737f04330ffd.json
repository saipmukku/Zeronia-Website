{"ast":null,"code":"/**\n * Anime.js - core - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { scope } from './globals.js';\nimport { isRegisteredTargetSymbol, isDomSymbol, isSvgSymbol, transformsSymbol, isBrowser } from './consts.js';\nimport { isSvg, isNil, isArr, isStr } from './helpers.js';\n\n/**\n* @import {\n*   DOMTarget,\n*   DOMTargetsParam,\n*   JSTargetsArray,\n*   TargetsParam,\n*   JSTargetsParam,\n*   TargetsArray,\n*   DOMTargetsArray,\n* } from '../types/index.js'\n*/\n\n/**\n * @param  {DOMTargetsParam|TargetsParam} v\n * @return {NodeList|HTMLCollection}\n */\nfunction getNodeList(v) {\n  const n = isStr(v) ? scope.root.querySelectorAll(v) : v;\n  if (n instanceof NodeList || n instanceof HTMLCollection) return n;\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction parseTargets(targets) {\n  if (isNil(targets)) return /** @type {TargetsArray} */[];\n  if (!isBrowser) return /** @type {JSTargetsArray} */isArr(targets) && targets.flat(Infinity) || [targets];\n  if (isArr(targets)) {\n    const flattened = targets.flat(Infinity);\n    /** @type {TargetsArray} */\n    const parsed = [];\n    for (let i = 0, l = flattened.length; i < l; i++) {\n      const item = flattened[i];\n      if (!isNil(item)) {\n        const nodeList = getNodeList(item);\n        if (nodeList) {\n          for (let j = 0, jl = nodeList.length; j < jl; j++) {\n            const subItem = nodeList[j];\n            if (!isNil(subItem)) {\n              let isDuplicate = false;\n              for (let k = 0, kl = parsed.length; k < kl; k++) {\n                if (parsed[k] === subItem) {\n                  isDuplicate = true;\n                  break;\n                }\n              }\n              if (!isDuplicate) {\n                parsed.push(subItem);\n              }\n            }\n          }\n        } else {\n          let isDuplicate = false;\n          for (let j = 0, jl = parsed.length; j < jl; j++) {\n            if (parsed[j] === item) {\n              isDuplicate = true;\n              break;\n            }\n          }\n          if (!isDuplicate) {\n            parsed.push(item);\n          }\n        }\n      }\n    }\n    return parsed;\n  }\n  const nodeList = getNodeList(targets);\n  if (nodeList) return /** @type {DOMTargetsArray} */Array.from(nodeList);\n  return /** @type {TargetsArray} */[targets];\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction registerTargets(targets) {\n  const parsedTargetsArray = parseTargets(targets);\n  const parsedTargetsLength = parsedTargetsArray.length;\n  if (parsedTargetsLength) {\n    for (let i = 0; i < parsedTargetsLength; i++) {\n      const target = parsedTargetsArray[i];\n      if (!target[isRegisteredTargetSymbol]) {\n        target[isRegisteredTargetSymbol] = true;\n        const isSvgType = isSvg(target);\n        const isDom = /** @type {DOMTarget} */target.nodeType || isSvgType;\n        if (isDom) {\n          target[isDomSymbol] = true;\n          target[isSvgSymbol] = isSvgType;\n          target[transformsSymbol] = {};\n        }\n      }\n    }\n  }\n  return parsedTargetsArray;\n}\nexport { getNodeList, parseTargets, registerTargets };","map":{"version":3,"names":["scope","isRegisteredTargetSymbol","isDomSymbol","isSvgSymbol","transformsSymbol","isBrowser","isSvg","isNil","isArr","isStr","getNodeList","v","n","root","querySelectorAll","NodeList","HTMLCollection","parseTargets","targets","flat","Infinity","flattened","parsed","i","l","length","item","nodeList","j","jl","subItem","isDuplicate","k","kl","push","Array","from","registerTargets","parsedTargetsArray","parsedTargetsLength","target","isSvgType","isDom","nodeType"],"sources":["/Users/mukku/Desktop/Work and Education/Projects/zeronia.org/node_modules/animejs/dist/modules/core/targets.js"],"sourcesContent":["/**\n * Anime.js - core - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { scope } from './globals.js';\nimport { isRegisteredTargetSymbol, isDomSymbol, isSvgSymbol, transformsSymbol, isBrowser } from './consts.js';\nimport { isSvg, isNil, isArr, isStr } from './helpers.js';\n\n/**\n* @import {\n*   DOMTarget,\n*   DOMTargetsParam,\n*   JSTargetsArray,\n*   TargetsParam,\n*   JSTargetsParam,\n*   TargetsArray,\n*   DOMTargetsArray,\n* } from '../types/index.js'\n*/\n\n/**\n * @param  {DOMTargetsParam|TargetsParam} v\n * @return {NodeList|HTMLCollection}\n */\nfunction getNodeList(v) {\n  const n = isStr(v) ? scope.root.querySelectorAll(v) : v;\n  if (n instanceof NodeList || n instanceof HTMLCollection) return n;\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction parseTargets(targets) {\n  if (isNil(targets)) return /** @type {TargetsArray} */([]);\n  if (!isBrowser) return /** @type {JSTargetsArray} */(isArr(targets) && targets.flat(Infinity) || [targets]);\n  if (isArr(targets)) {\n    const flattened = targets.flat(Infinity);\n    /** @type {TargetsArray} */\n    const parsed = [];\n    for (let i = 0, l = flattened.length; i < l; i++) {\n      const item = flattened[i];\n      if (!isNil(item)) {\n        const nodeList = getNodeList(item);\n        if (nodeList) {\n          for (let j = 0, jl = nodeList.length; j < jl; j++) {\n            const subItem = nodeList[j];\n            if (!isNil(subItem)) {\n              let isDuplicate = false;\n              for (let k = 0, kl = parsed.length; k < kl; k++) {\n                if (parsed[k] === subItem) {\n                  isDuplicate = true;\n                  break;\n                }\n              }\n              if (!isDuplicate) {\n                parsed.push(subItem);\n              }\n            }\n          }\n        } else {\n          let isDuplicate = false;\n          for (let j = 0, jl = parsed.length; j < jl; j++) {\n            if (parsed[j] === item) {\n              isDuplicate = true;\n              break;\n            }\n          }\n          if (!isDuplicate) {\n            parsed.push(item);\n          }\n        }\n      }\n    }\n    return parsed;\n  }\n  const nodeList = getNodeList(targets);\n  if (nodeList) return /** @type {DOMTargetsArray} */(Array.from(nodeList));\n  return /** @type {TargetsArray} */([targets]);\n}\n\n/**\n * @overload\n * @param  {DOMTargetsParam} targets\n * @return {DOMTargetsArray}\n *\n * @overload\n * @param  {JSTargetsParam} targets\n * @return {JSTargetsArray}\n *\n * @overload\n * @param  {TargetsParam} targets\n * @return {TargetsArray}\n *\n * @param  {DOMTargetsParam|JSTargetsParam|TargetsParam} targets\n */\nfunction registerTargets(targets) {\n  const parsedTargetsArray = parseTargets(targets);\n  const parsedTargetsLength = parsedTargetsArray.length;\n  if (parsedTargetsLength) {\n    for (let i = 0; i < parsedTargetsLength; i++) {\n      const target = parsedTargetsArray[i];\n      if (!target[isRegisteredTargetSymbol]) {\n        target[isRegisteredTargetSymbol] = true;\n        const isSvgType = isSvg(target);\n        const isDom = /** @type {DOMTarget} */(target).nodeType || isSvgType;\n        if (isDom) {\n          target[isDomSymbol] = true;\n          target[isSvgSymbol] = isSvgType;\n          target[transformsSymbol] = {};\n        }\n      }\n    }\n  }\n  return parsedTargetsArray;\n}\n\nexport { getNodeList, parseTargets, registerTargets };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}