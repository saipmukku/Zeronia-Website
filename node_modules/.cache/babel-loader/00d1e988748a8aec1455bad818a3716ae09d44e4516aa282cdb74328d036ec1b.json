{"ast":null,"code":"/**\n * Anime.js - waapi - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { isNil, isUnd, stringStartsWith, isKey, isObj, isArr, toLowerCase, round, isStr, isFnc, isNum } from '../core/helpers.js';\nimport { scope, globals } from '../core/globals.js';\nimport { registerTargets } from '../core/targets.js';\nimport { setValue, getFunctionValue } from '../core/values.js';\nimport { isBrowser, validTransforms, noop, transformsSymbol, shortTransforms, transformsFragmentStrings, emptyString, K } from '../core/consts.js';\nimport { none } from '../easings/none.js';\nimport { parseEaseString } from '../easings/eases/parser.js';\nimport { addWAAPIAnimation } from './composition.js';\n\n/**\n * @import {\n *   Callback,\n *   EasingFunction,\n *   EasingParam,\n *   DOMTarget,\n *   DOMTargetsParam,\n *   DOMTargetsArray,\n *   WAAPIAnimationParams,\n *   WAAPITweenOptions,\n *   WAAPIKeyframeValue,\n *   WAAPITweenValue\n * } from '../types/index.js'\n*/\n\n/**\n * @import {\n *   Spring,\n * } from '../easings/spring/index.js'\n*/\n\n/**\n * @import {\n *   ScrollObserver,\n * } from '../events/scroll.js'\n*/\n\n/**\n * Converts an easing function into a valid CSS linear() timing function string\n * @param {EasingFunction} fn\n * @param {number} [samples=100]\n * @returns {string} CSS linear() timing function\n */\nconst easingToLinear = (fn, samples = 100) => {\n  const points = [];\n  for (let i = 0; i <= samples; i++) points.push(round(fn(i / samples), 4));\n  return `linear(${points.join(', ')})`;\n};\nconst WAAPIEasesLookups = {};\n\n/**\n * @param  {EasingParam} ease\n * @return {String}\n */\nconst parseWAAPIEasing = ease => {\n  let parsedEase = WAAPIEasesLookups[ease];\n  if (parsedEase) return parsedEase;\n  parsedEase = 'linear';\n  if (isStr(ease)) {\n    if (stringStartsWith(ease, 'linear') || stringStartsWith(ease, 'cubic-') || stringStartsWith(ease, 'steps') || stringStartsWith(ease, 'ease')) {\n      parsedEase = ease;\n    } else if (stringStartsWith(ease, 'cubicB')) {\n      parsedEase = toLowerCase(ease);\n    } else {\n      const parsed = parseEaseString(ease);\n      if (isFnc(parsed)) parsedEase = parsed === none ? 'linear' : easingToLinear(parsed);\n    }\n    // Only cache string based easing name, otherwise function arguments get lost\n    WAAPIEasesLookups[ease] = parsedEase;\n  } else if (isFnc(ease)) {\n    const easing = easingToLinear(ease);\n    if (easing) parsedEase = easing;\n  } else if (/** @type {Spring} */ease.ease) {\n    parsedEase = easingToLinear(/** @type {Spring} */ease.ease);\n  }\n  return parsedEase;\n};\nconst transformsShorthands = ['x', 'y', 'z'];\nconst commonDefaultPXProperties = ['perspective', 'width', 'height', 'margin', 'padding', 'top', 'right', 'bottom', 'left', 'borderWidth', 'fontSize', 'borderRadius', ...transformsShorthands];\nconst validIndividualTransforms = /*#__PURE__*/(() => [...transformsShorthands, ...validTransforms.filter(t => ['X', 'Y', 'Z'].some(axis => t.endsWith(axis)))])();\nlet transformsPropertiesRegistered = null;\n\n/**\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} value\n * @param  {DOMTarget} $el\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {String}\n */\nconst normalizeTweenValue = (propName, value, $el, i, targetsLength) => {\n  // Do not try to compute strings with getFunctionValue otherwise it will convert CSS variables\n  let v = isStr(value) ? value : getFunctionValue(/** @type {any} */value, $el, i, targetsLength);\n  if (!isNum(v)) return v;\n  if (commonDefaultPXProperties.includes(propName) || stringStartsWith(propName, 'translate')) return `${v}px`;\n  if (stringStartsWith(propName, 'rotate') || stringStartsWith(propName, 'skew')) return `${v}deg`;\n  return `${v}`;\n};\n\n/**\n * @param  {DOMTarget} $el\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} from\n * @param  {WAAPIKeyframeValue} to\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {WAAPITweenValue}\n */\nconst parseIndividualTweenValue = ($el, propName, from, to, i, targetsLength) => {\n  /** @type {WAAPITweenValue} */\n  let tweenValue = '0';\n  const computedTo = !isUnd(to) ? normalizeTweenValue(propName, to, $el, i, targetsLength) : getComputedStyle($el)[propName];\n  if (!isUnd(from)) {\n    const computedFrom = normalizeTweenValue(propName, from, $el, i, targetsLength);\n    tweenValue = [computedFrom, computedTo];\n  } else {\n    tweenValue = isArr(to) ? to.map((/** @type {any} */v) => normalizeTweenValue(propName, v, $el, i, targetsLength)) : computedTo;\n  }\n  return tweenValue;\n};\nclass WAAPIAnimation {\n  /**\n   * @param {DOMTargetsParam} targets\n   * @param {WAAPIAnimationParams} params\n   */\n  constructor(targets, params) {\n    if (scope.current) scope.current.register(this);\n\n    // Skip the registration and fallback to no animation in case CSS.registerProperty is not supported\n    if (isNil(transformsPropertiesRegistered)) {\n      if (isBrowser && (isUnd(CSS) || !Object.hasOwnProperty.call(CSS, 'registerProperty'))) {\n        transformsPropertiesRegistered = false;\n      } else {\n        validTransforms.forEach(t => {\n          const isSkew = stringStartsWith(t, 'skew');\n          const isScale = stringStartsWith(t, 'scale');\n          const isRotate = stringStartsWith(t, 'rotate');\n          const isTranslate = stringStartsWith(t, 'translate');\n          const isAngle = isRotate || isSkew;\n          const syntax = isAngle ? '<angle>' : isScale ? \"<number>\" : isTranslate ? \"<length-percentage>\" : \"*\";\n          try {\n            CSS.registerProperty({\n              name: '--' + t,\n              syntax,\n              inherits: false,\n              initialValue: isTranslate ? '0px' : isAngle ? '0deg' : isScale ? '1' : '0'\n            });\n          } catch {}\n        });\n        transformsPropertiesRegistered = true;\n      }\n    }\n    const parsedTargets = registerTargets(targets);\n    const targetsLength = parsedTargets.length;\n    if (!targetsLength) {\n      console.warn(`No target found. Make sure the element you're trying to animate is accessible before creating your animation.`);\n    }\n    const ease = setValue(params.ease, parseWAAPIEasing(globals.defaults.ease));\n    const spring = /** @type {Spring} */ease.ease && ease;\n    const autoplay = setValue(params.autoplay, globals.defaults.autoplay);\n    const scroll = autoplay && /** @type {ScrollObserver} */autoplay.link ? autoplay : false;\n    const alternate = params.alternate && /** @type {Boolean} */params.alternate === true;\n    const reversed = params.reversed && /** @type {Boolean} */params.reversed === true;\n    const loop = setValue(params.loop, globals.defaults.loop);\n    const iterations = /** @type {Number} */loop === true || loop === Infinity ? Infinity : isNum(loop) ? loop + 1 : 1;\n    /** @type {PlaybackDirection} */\n    const direction = alternate ? reversed ? 'alternate-reverse' : 'alternate' : reversed ? 'reverse' : 'normal';\n    /** @type {FillMode} */\n    const fill = 'both'; // We use 'both' here because the animation can be reversed during playback\n    /** @type {String} */\n    const easing = parseWAAPIEasing(ease);\n    const timeScale = globals.timeScale === 1 ? 1 : K;\n\n    /** @type {DOMTargetsArray}] */\n    this.targets = parsedTargets;\n    /** @type {Array<globalThis.Animation>}] */\n    this.animations = [];\n    /** @type {globalThis.Animation}] */\n    this.controlAnimation = null;\n    /** @type {Callback<this>} */\n    this.onComplete = params.onComplete || (/** @type {Callback<WAAPIAnimation>} */ /** @type {unknown} */globals.defaults.onComplete);\n    /** @type {Number} */\n    this.duration = 0;\n    /** @type {Boolean} */\n    this.muteCallbacks = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Boolean} */\n    this.paused = !autoplay || scroll !== false;\n    /** @type {Boolean} */\n    this.reversed = reversed;\n    /** @type {Boolean} */\n    this.persist = setValue(params.persist, globals.defaults.persist);\n    /** @type {Boolean|ScrollObserver} */\n    this.autoplay = autoplay;\n    /** @type {Number} */\n    this._speed = setValue(params.playbackRate, globals.defaults.playbackRate);\n    /** @type {Function} */\n    this._resolve = noop; // Used by .then()\n    /** @type {Number} */\n    this._completed = 0;\n    /** @type {Array.<Object>} */\n    this._inlineStyles = [];\n    parsedTargets.forEach(($el, i) => {\n      const cachedTransforms = $el[transformsSymbol];\n      const hasIndividualTransforms = validIndividualTransforms.some(t => params.hasOwnProperty(t));\n      const elStyle = $el.style;\n      const inlineStyles = this._inlineStyles[i] = {};\n\n      /** @type {Number} */\n      const duration = (spring ? /** @type {Spring} */spring.settlingDuration : getFunctionValue(setValue(params.duration, globals.defaults.duration), $el, i, targetsLength)) * timeScale;\n      /** @type {Number} */\n      const delay = getFunctionValue(setValue(params.delay, globals.defaults.delay), $el, i, targetsLength) * timeScale;\n      /** @type {CompositeOperation} */\n      const composite = /** @type {CompositeOperation} */setValue(params.composition, 'replace');\n      for (let name in params) {\n        if (!isKey(name)) continue;\n        /** @type {PropertyIndexedKeyframes} */\n        const keyframes = {};\n        /** @type {KeyframeAnimationOptions} */\n        const tweenParams = {\n          iterations,\n          direction,\n          fill,\n          easing,\n          duration,\n          delay,\n          composite\n        };\n        const propertyValue = params[name];\n        const individualTransformProperty = hasIndividualTransforms ? validTransforms.includes(name) ? name : shortTransforms.get(name) : false;\n        const styleName = individualTransformProperty ? 'transform' : name;\n        if (!inlineStyles[styleName]) {\n          inlineStyles[styleName] = elStyle[styleName];\n        }\n        let parsedPropertyValue;\n        if (isObj(propertyValue)) {\n          const tweenOptions = /** @type {WAAPITweenOptions} */propertyValue;\n          const tweenOptionsEase = setValue(tweenOptions.ease, ease);\n          const tweenOptionsSpring = /** @type {Spring} */tweenOptionsEase.ease && tweenOptionsEase;\n          const to = /** @type {WAAPITweenOptions} */tweenOptions.to;\n          const from = /** @type {WAAPITweenOptions} */tweenOptions.from;\n          /** @type {Number} */\n          tweenParams.duration = (tweenOptionsSpring ? /** @type {Spring} */tweenOptionsSpring.settlingDuration : getFunctionValue(setValue(tweenOptions.duration, duration), $el, i, targetsLength)) * timeScale;\n          /** @type {Number} */\n          tweenParams.delay = getFunctionValue(setValue(tweenOptions.delay, delay), $el, i, targetsLength) * timeScale;\n          /** @type {CompositeOperation} */\n          tweenParams.composite = /** @type {CompositeOperation} */setValue(tweenOptions.composition, composite);\n          /** @type {String} */\n          tweenParams.easing = parseWAAPIEasing(tweenOptionsEase);\n          parsedPropertyValue = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n          if (!isUnd(from)) {\n            if (!individualTransformProperty) {\n              elStyle[name] = keyframes[name][0];\n            } else {\n              const key = `--${individualTransformProperty}`;\n              elStyle.setProperty(key, keyframes[key][0]);\n            }\n          }\n        } else {\n          parsedPropertyValue = isArr(propertyValue) ? propertyValue.map((/** @type {any} */v) => normalizeTweenValue(name, v, $el, i, targetsLength)) : normalizeTweenValue(name, /** @type {any} */propertyValue, $el, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parsedPropertyValue;\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n        }\n      }\n      if (hasIndividualTransforms) {\n        let transforms = emptyString;\n        for (let t in cachedTransforms) {\n          transforms += `${transformsFragmentStrings[t]}var(--${t})) `;\n        }\n        elStyle.transform = transforms;\n      }\n    });\n    if (scroll) {\n      /** @type {ScrollObserver} */this.autoplay.link(this);\n    }\n  }\n\n  /**\n   * @callback forEachCallback\n   * @param {globalThis.Animation} animation\n   */\n\n  /**\n   * @param  {forEachCallback|String} callback\n   * @return {this}\n   */\n  forEach(callback) {\n    const cb = isStr(callback) ? (/** @type {globalThis.Animation} */a) => a[callback]() : callback;\n    this.animations.forEach(cb);\n    return this;\n  }\n  get speed() {\n    return this._speed;\n  }\n  set speed(speed) {\n    this._speed = +speed;\n    this.forEach(anim => anim.playbackRate = speed);\n  }\n  get currentTime() {\n    const controlAnimation = this.controlAnimation;\n    const timeScale = globals.timeScale;\n    return this.completed ? this.duration : controlAnimation ? +controlAnimation.currentTime * (timeScale === 1 ? 1 : timeScale) : 0;\n  }\n  set currentTime(time) {\n    const t = time * (globals.timeScale === 1 ? 1 : K);\n    this.forEach(anim => {\n      // Make sure the animation playState is not 'paused' in order to properly trigger an onfinish callback.\n      // The \"paused\" play state supersedes the \"finished\" play state; if the animation is both paused and finished, the \"paused\" state is the one that will be reported.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Animation/finish_event\n      // This is not needed for persisting animations since they never finish.\n      if (!this.persist && t >= this.duration) anim.play();\n      anim.currentTime = t;\n    });\n  }\n  get progress() {\n    return this.currentTime / this.duration;\n  }\n  set progress(progress) {\n    this.forEach(anim => anim.currentTime = progress * this.duration || 0);\n  }\n  resume() {\n    if (!this.paused) return this;\n    this.paused = false;\n    // TODO: Store the current time, and seek back to the last position\n    return this.forEach('play');\n  }\n  pause() {\n    if (this.paused) return this;\n    this.paused = true;\n    return this.forEach('pause');\n  }\n  alternate() {\n    this.reversed = !this.reversed;\n    this.forEach('reverse');\n    if (this.paused) this.forEach('pause');\n    return this;\n  }\n  play() {\n    if (this.reversed) this.alternate();\n    return this.resume();\n  }\n  reverse() {\n    if (!this.reversed) this.alternate();\n    return this.resume();\n  }\n\n  /**\n   * @param {Number} time\n   * @param {Boolean} muteCallbacks\n   */\n  seek(time, muteCallbacks = false) {\n    if (muteCallbacks) this.muteCallbacks = true;\n    if (time < this.duration) this.completed = false;\n    this.currentTime = time;\n    this.muteCallbacks = false;\n    if (this.paused) this.pause();\n    return this;\n  }\n  restart() {\n    this.completed = false;\n    return this.seek(0, true).resume();\n  }\n  commitStyles() {\n    return this.forEach('commitStyles');\n  }\n  complete() {\n    return this.seek(this.duration);\n  }\n  cancel() {\n    this.muteCallbacks = true; // This prevents triggering the onComplete callback and resolving the Promise\n    return this.commitStyles().forEach('cancel');\n  }\n  revert() {\n    // NOTE: We need a better way to revert the transforms, since right now the entire transform property value is reverted,\n    // This means if you have multiple animations animating different transforms on the same target,\n    // reverting one of them will also override the transform property of the other animations.\n    // A better approach would be to store the original custom property values is they exist instead of the entire transform value,\n    // and update the CSS variables with the orignal value\n    this.cancel().targets.forEach(($el, i) => {\n      const targetStyle = $el.style;\n      const targetInlineStyles = this._inlineStyles[i];\n      for (let name in targetInlineStyles) {\n        const originalInlinedValue = targetInlineStyles[name];\n        if (isUnd(originalInlinedValue) || originalInlinedValue === emptyString) {\n          targetStyle.removeProperty(toLowerCase(name));\n        } else {\n          targetStyle[name] = originalInlinedValue;\n        }\n      }\n      // Remove style attribute if empty\n      if ($el.getAttribute('style') === emptyString) $el.removeAttribute('style');\n    });\n    return this;\n  }\n\n  /**\n   * @typedef {this & {then: null}} ResolvedWAAPIAnimation\n   */\n\n  /**\n   * @param  {Callback<ResolvedWAAPIAnimation>} [callback]\n   * @return Promise<this>\n   */\n  then(callback = noop) {\n    const then = this.then;\n    const onResolve = () => {\n      this.then = null;\n      callback(/** @type {ResolvedWAAPIAnimation} */this);\n      this.then = then;\n      this._resolve = noop;\n    };\n    return new Promise(r => {\n      this._resolve = () => r(onResolve());\n      if (this.completed) this._resolve();\n      return this;\n    });\n  }\n}\nconst waapi = {\n  /**\n   * @param {DOMTargetsParam} targets\n   * @param {WAAPIAnimationParams} params\n   * @return {WAAPIAnimation}\n   */\n  animate: (targets, params) => new WAAPIAnimation(targets, params),\n  convertEase: easingToLinear\n};\nexport { WAAPIAnimation, waapi };","map":{"version":3,"names":["isNil","isUnd","stringStartsWith","isKey","isObj","isArr","toLowerCase","round","isStr","isFnc","isNum","scope","globals","registerTargets","setValue","getFunctionValue","isBrowser","validTransforms","noop","transformsSymbol","shortTransforms","transformsFragmentStrings","emptyString","K","none","parseEaseString","addWAAPIAnimation","easingToLinear","fn","samples","points","i","push","join","WAAPIEasesLookups","parseWAAPIEasing","ease","parsedEase","parsed","easing","transformsShorthands","commonDefaultPXProperties","validIndividualTransforms","filter","t","some","axis","endsWith","transformsPropertiesRegistered","normalizeTweenValue","propName","value","$el","targetsLength","v","includes","parseIndividualTweenValue","from","to","tweenValue","computedTo","getComputedStyle","computedFrom","map","WAAPIAnimation","constructor","targets","params","current","register","CSS","Object","hasOwnProperty","call","forEach","isSkew","isScale","isRotate","isTranslate","isAngle","syntax","registerProperty","name","inherits","initialValue","parsedTargets","length","console","warn","defaults","spring","autoplay","scroll","link","alternate","reversed","loop","iterations","Infinity","direction","fill","timeScale","animations","controlAnimation","onComplete","duration","muteCallbacks","completed","paused","persist","_speed","playbackRate","_resolve","_completed","_inlineStyles","cachedTransforms","hasIndividualTransforms","elStyle","style","inlineStyles","settlingDuration","delay","composite","composition","keyframes","tweenParams","propertyValue","individualTransformProperty","get","styleName","parsedPropertyValue","tweenOptions","tweenOptionsEase","tweenOptionsSpring","key","setProperty","transforms","transform","callback","cb","a","speed","anim","currentTime","time","play","progress","resume","pause","reverse","seek","restart","commitStyles","complete","cancel","revert","targetStyle","targetInlineStyles","originalInlinedValue","removeProperty","getAttribute","removeAttribute","then","onResolve","Promise","r","waapi","animate","convertEase"],"sources":["/Users/mukku/Desktop/Work and Education/Projects/zeronia.org/node_modules/animejs/dist/modules/waapi/waapi.js"],"sourcesContent":["/**\n * Anime.js - waapi - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { isNil, isUnd, stringStartsWith, isKey, isObj, isArr, toLowerCase, round, isStr, isFnc, isNum } from '../core/helpers.js';\nimport { scope, globals } from '../core/globals.js';\nimport { registerTargets } from '../core/targets.js';\nimport { setValue, getFunctionValue } from '../core/values.js';\nimport { isBrowser, validTransforms, noop, transformsSymbol, shortTransforms, transformsFragmentStrings, emptyString, K } from '../core/consts.js';\nimport { none } from '../easings/none.js';\nimport { parseEaseString } from '../easings/eases/parser.js';\nimport { addWAAPIAnimation } from './composition.js';\n\n/**\n * @import {\n *   Callback,\n *   EasingFunction,\n *   EasingParam,\n *   DOMTarget,\n *   DOMTargetsParam,\n *   DOMTargetsArray,\n *   WAAPIAnimationParams,\n *   WAAPITweenOptions,\n *   WAAPIKeyframeValue,\n *   WAAPITweenValue\n * } from '../types/index.js'\n*/\n\n/**\n * @import {\n *   Spring,\n * } from '../easings/spring/index.js'\n*/\n\n/**\n * @import {\n *   ScrollObserver,\n * } from '../events/scroll.js'\n*/\n\n/**\n * Converts an easing function into a valid CSS linear() timing function string\n * @param {EasingFunction} fn\n * @param {number} [samples=100]\n * @returns {string} CSS linear() timing function\n */\nconst easingToLinear = (fn, samples = 100) => {\n  const points = [];\n  for (let i = 0; i <= samples; i++) points.push(round(fn(i / samples), 4));\n  return `linear(${points.join(', ')})`;\n};\n\nconst WAAPIEasesLookups = {};\n\n/**\n * @param  {EasingParam} ease\n * @return {String}\n */\nconst parseWAAPIEasing = (ease) => {\n  let parsedEase = WAAPIEasesLookups[ease];\n  if (parsedEase) return parsedEase;\n  parsedEase = 'linear';\n  if (isStr(ease)) {\n    if (\n      stringStartsWith(ease, 'linear') ||\n      stringStartsWith(ease, 'cubic-') ||\n      stringStartsWith(ease, 'steps') ||\n      stringStartsWith(ease, 'ease')\n    ) {\n      parsedEase = ease;\n    } else if (stringStartsWith(ease, 'cubicB')) {\n      parsedEase = toLowerCase(ease);\n    } else {\n      const parsed = parseEaseString(ease);\n      if (isFnc(parsed)) parsedEase = parsed === none ? 'linear' : easingToLinear(parsed);\n    }\n    // Only cache string based easing name, otherwise function arguments get lost\n    WAAPIEasesLookups[ease] = parsedEase;\n  } else if (isFnc(ease)) {\n    const easing = easingToLinear(ease);\n    if (easing) parsedEase = easing;\n  } else if (/** @type {Spring} */(ease).ease) {\n    parsedEase = easingToLinear(/** @type {Spring} */(ease).ease);\n  }\n  return parsedEase;\n};\n\nconst transformsShorthands = ['x', 'y', 'z'];\nconst commonDefaultPXProperties = [\n  'perspective',\n  'width',\n  'height',\n  'margin',\n  'padding',\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'borderWidth',\n  'fontSize',\n  'borderRadius',\n  ...transformsShorthands\n];\n\nconst validIndividualTransforms = /*#__PURE__*/ (() => [...transformsShorthands, ...validTransforms.filter(t => ['X', 'Y', 'Z'].some(axis => t.endsWith(axis)))])();\n\nlet transformsPropertiesRegistered = null;\n\n/**\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} value\n * @param  {DOMTarget} $el\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {String}\n */\nconst normalizeTweenValue = (propName, value, $el, i, targetsLength) => {\n  // Do not try to compute strings with getFunctionValue otherwise it will convert CSS variables\n  let v = isStr(value) ? value : getFunctionValue(/** @type {any} */(value), $el, i, targetsLength);\n  if (!isNum(v)) return v;\n  if (commonDefaultPXProperties.includes(propName) || stringStartsWith(propName, 'translate')) return `${v}px`;\n  if (stringStartsWith(propName, 'rotate') || stringStartsWith(propName, 'skew')) return `${v}deg`;\n  return `${v}`;\n};\n\n/**\n * @param  {DOMTarget} $el\n * @param  {String} propName\n * @param  {WAAPIKeyframeValue} from\n * @param  {WAAPIKeyframeValue} to\n * @param  {Number} i\n * @param  {Number} targetsLength\n * @return {WAAPITweenValue}\n */\nconst parseIndividualTweenValue = ($el, propName, from, to, i, targetsLength) => {\n  /** @type {WAAPITweenValue} */\n  let tweenValue = '0';\n  const computedTo = !isUnd(to) ? normalizeTweenValue(propName, to, $el, i, targetsLength) : getComputedStyle($el)[propName];\n  if (!isUnd(from)) {\n    const computedFrom = normalizeTweenValue(propName, from, $el, i, targetsLength);\n    tweenValue = [computedFrom, computedTo];\n  } else {\n    tweenValue = isArr(to) ? to.map((/** @type {any} */v) => normalizeTweenValue(propName, v, $el, i, targetsLength)) : computedTo;\n  }\n  return tweenValue;\n};\n\nclass WAAPIAnimation {\n/**\n * @param {DOMTargetsParam} targets\n * @param {WAAPIAnimationParams} params\n */\n  constructor(targets, params) {\n\n    if (scope.current) scope.current.register(this);\n\n    // Skip the registration and fallback to no animation in case CSS.registerProperty is not supported\n    if (isNil(transformsPropertiesRegistered)) {\n      if (isBrowser && (isUnd(CSS) || !Object.hasOwnProperty.call(CSS, 'registerProperty'))) {\n        transformsPropertiesRegistered = false;\n      } else {\n        validTransforms.forEach(t => {\n          const isSkew = stringStartsWith(t, 'skew');\n          const isScale = stringStartsWith(t, 'scale');\n          const isRotate = stringStartsWith(t, 'rotate');\n          const isTranslate = stringStartsWith(t, 'translate');\n          const isAngle = isRotate || isSkew;\n          const syntax = isAngle ? '<angle>' : isScale ? \"<number>\" : isTranslate ? \"<length-percentage>\" : \"*\";\n          try {\n            CSS.registerProperty({\n              name: '--' + t,\n              syntax,\n              inherits: false,\n              initialValue: isTranslate ? '0px' : isAngle ? '0deg' : isScale ? '1' : '0',\n            });\n          } catch {}        });\n        transformsPropertiesRegistered = true;\n      }\n    }\n\n    const parsedTargets = registerTargets(targets);\n    const targetsLength = parsedTargets.length;\n\n    if (!targetsLength) {\n      console.warn(`No target found. Make sure the element you're trying to animate is accessible before creating your animation.`);\n    }\n\n    const ease = setValue(params.ease, parseWAAPIEasing(globals.defaults.ease));\n    const spring = /** @type {Spring} */(ease).ease && ease;\n    const autoplay = setValue(params.autoplay, globals.defaults.autoplay);\n    const scroll = autoplay && /** @type {ScrollObserver} */(autoplay).link ? autoplay : false;\n    const alternate = params.alternate && /** @type {Boolean} */(params.alternate) === true;\n    const reversed = params.reversed && /** @type {Boolean} */(params.reversed) === true;\n    const loop = setValue(params.loop, globals.defaults.loop);\n    const iterations = /** @type {Number} */((loop === true || loop === Infinity) ? Infinity : isNum(loop) ? loop + 1 : 1);\n    /** @type {PlaybackDirection} */\n    const direction = alternate ? reversed ? 'alternate-reverse' : 'alternate' : reversed ? 'reverse' : 'normal';\n    /** @type {FillMode} */\n    const fill = 'both'; // We use 'both' here because the animation can be reversed during playback\n    /** @type {String} */\n    const easing = parseWAAPIEasing(ease);\n    const timeScale = (globals.timeScale === 1 ? 1 : K);\n\n    /** @type {DOMTargetsArray}] */\n    this.targets = parsedTargets;\n    /** @type {Array<globalThis.Animation>}] */\n    this.animations = [];\n    /** @type {globalThis.Animation}] */\n    this.controlAnimation = null;\n    /** @type {Callback<this>} */\n    this.onComplete = params.onComplete || /** @type {Callback<WAAPIAnimation>} */(/** @type {unknown} */(globals.defaults.onComplete));\n    /** @type {Number} */\n    this.duration = 0;\n    /** @type {Boolean} */\n    this.muteCallbacks = false;\n    /** @type {Boolean} */\n    this.completed = false;\n    /** @type {Boolean} */\n    this.paused = !autoplay || scroll !== false;\n    /** @type {Boolean} */\n    this.reversed = reversed;\n    /** @type {Boolean} */\n    this.persist = setValue(params.persist, globals.defaults.persist);\n    /** @type {Boolean|ScrollObserver} */\n    this.autoplay = autoplay;\n    /** @type {Number} */\n    this._speed = setValue(params.playbackRate, globals.defaults.playbackRate);\n    /** @type {Function} */\n    this._resolve = noop; // Used by .then()\n    /** @type {Number} */\n    this._completed = 0;\n    /** @type {Array.<Object>} */\n    this._inlineStyles = [];\n\n    parsedTargets.forEach(($el, i) => {\n\n      const cachedTransforms = $el[transformsSymbol];\n      const hasIndividualTransforms = validIndividualTransforms.some(t => params.hasOwnProperty(t));\n      const elStyle = $el.style;\n      const inlineStyles = this._inlineStyles[i] = {};\n\n      /** @type {Number} */\n      const duration = (spring ? /** @type {Spring} */(spring).settlingDuration : getFunctionValue(setValue(params.duration, globals.defaults.duration), $el, i, targetsLength)) * timeScale;\n      /** @type {Number} */\n      const delay = getFunctionValue(setValue(params.delay, globals.defaults.delay), $el, i, targetsLength) * timeScale;\n      /** @type {CompositeOperation} */\n      const composite = /** @type {CompositeOperation} */(setValue(params.composition, 'replace'));\n\n      for (let name in params) {\n        if (!isKey(name)) continue;\n        /** @type {PropertyIndexedKeyframes} */\n        const keyframes = {};\n        /** @type {KeyframeAnimationOptions} */\n        const tweenParams = { iterations, direction, fill, easing, duration, delay, composite };\n        const propertyValue = params[name];\n        const individualTransformProperty = hasIndividualTransforms ? validTransforms.includes(name) ? name : shortTransforms.get(name) : false;\n\n        const styleName = individualTransformProperty ? 'transform' : name;\n        if (!inlineStyles[styleName]) {\n          inlineStyles[styleName] = elStyle[styleName];\n        }\n\n        let parsedPropertyValue;\n        if (isObj(propertyValue)) {\n          const tweenOptions = /** @type {WAAPITweenOptions} */(propertyValue);\n          const tweenOptionsEase = setValue(tweenOptions.ease, ease);\n          const tweenOptionsSpring = /** @type {Spring} */(tweenOptionsEase).ease && tweenOptionsEase;\n          const to = /** @type {WAAPITweenOptions} */(tweenOptions).to;\n          const from = /** @type {WAAPITweenOptions} */(tweenOptions).from;\n          /** @type {Number} */\n          tweenParams.duration = (tweenOptionsSpring ? /** @type {Spring} */(tweenOptionsSpring).settlingDuration : getFunctionValue(setValue(tweenOptions.duration, duration), $el, i, targetsLength)) * timeScale;\n          /** @type {Number} */\n          tweenParams.delay = getFunctionValue(setValue(tweenOptions.delay, delay), $el, i, targetsLength) * timeScale;\n          /** @type {CompositeOperation} */\n          tweenParams.composite = /** @type {CompositeOperation} */(setValue(tweenOptions.composition, composite));\n          /** @type {String} */\n          tweenParams.easing = parseWAAPIEasing(tweenOptionsEase);\n          parsedPropertyValue = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parseIndividualTweenValue($el, name, from, to, i, targetsLength);\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n          if (!isUnd(from)) {\n            if (!individualTransformProperty) {\n              elStyle[name] = keyframes[name][0];\n            } else {\n              const key = `--${individualTransformProperty}`;\n              elStyle.setProperty(key, keyframes[key][0]);\n            }\n          }\n        } else {\n          parsedPropertyValue = isArr(propertyValue) ?\n                                propertyValue.map((/** @type {any} */v) => normalizeTweenValue(name, v, $el, i, targetsLength)) :\n                                normalizeTweenValue(name, /** @type {any} */(propertyValue), $el, i, targetsLength);\n          if (individualTransformProperty) {\n            keyframes[`--${individualTransformProperty}`] = parsedPropertyValue;\n            cachedTransforms[individualTransformProperty] = parsedPropertyValue;\n          } else {\n            keyframes[name] = parsedPropertyValue;\n          }\n          addWAAPIAnimation(this, $el, name, keyframes, tweenParams);\n        }\n      }\n      if (hasIndividualTransforms) {\n        let transforms = emptyString;\n        for (let t in cachedTransforms) {\n          transforms += `${transformsFragmentStrings[t]}var(--${t})) `;\n        }\n        elStyle.transform = transforms;\n      }\n    });\n\n    if (scroll) {\n      /** @type {ScrollObserver} */(this.autoplay).link(this);\n    }\n  }\n\n  /**\n   * @callback forEachCallback\n   * @param {globalThis.Animation} animation\n   */\n\n  /**\n   * @param  {forEachCallback|String} callback\n   * @return {this}\n   */\n  forEach(callback) {\n    const cb = isStr(callback) ? (/** @type {globalThis.Animation} */a) => a[callback]() : callback;\n    this.animations.forEach(cb);\n    return this;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  set speed(speed) {\n    this._speed = +speed;\n    this.forEach(anim => anim.playbackRate = speed);\n  }\n\n  get currentTime() {\n    const controlAnimation = this.controlAnimation;\n    const timeScale = globals.timeScale;\n    return this.completed ? this.duration : controlAnimation ? +controlAnimation.currentTime * (timeScale === 1 ? 1 : timeScale) : 0;\n  }\n\n  set currentTime(time) {\n    const t = time * (globals.timeScale === 1 ? 1 : K);\n    this.forEach(anim => {\n      // Make sure the animation playState is not 'paused' in order to properly trigger an onfinish callback.\n      // The \"paused\" play state supersedes the \"finished\" play state; if the animation is both paused and finished, the \"paused\" state is the one that will be reported.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Animation/finish_event\n      // This is not needed for persisting animations since they never finish.\n      if (!this.persist && t >= this.duration) anim.play();\n      anim.currentTime = t;\n    });\n  }\n\n  get progress() {\n    return this.currentTime / this.duration;\n  }\n\n  set progress(progress) {\n    this.forEach(anim => anim.currentTime = progress * this.duration || 0);\n  }\n\n  resume() {\n    if (!this.paused) return this;\n    this.paused = false;\n    // TODO: Store the current time, and seek back to the last position\n    return this.forEach('play');\n  }\n\n  pause() {\n    if (this.paused) return this;\n    this.paused = true;\n    return this.forEach('pause');\n  }\n\n  alternate() {\n    this.reversed = !this.reversed;\n    this.forEach('reverse');\n    if (this.paused) this.forEach('pause');\n    return this;\n  }\n\n  play() {\n    if (this.reversed) this.alternate();\n    return this.resume();\n  }\n\n  reverse() {\n    if (!this.reversed) this.alternate();\n    return this.resume();\n  }\n\n /**\n  * @param {Number} time\n  * @param {Boolean} muteCallbacks\n  */\n  seek(time, muteCallbacks = false) {\n    if (muteCallbacks) this.muteCallbacks = true;\n    if (time < this.duration) this.completed = false;\n    this.currentTime = time;\n    this.muteCallbacks = false;\n    if (this.paused) this.pause();\n    return this;\n  }\n\n  restart() {\n    this.completed = false;\n    return this.seek(0, true).resume();\n  }\n\n  commitStyles() {\n    return this.forEach('commitStyles');\n  }\n\n  complete() {\n    return this.seek(this.duration);\n  }\n\n  cancel() {\n    this.muteCallbacks = true; // This prevents triggering the onComplete callback and resolving the Promise\n    return this.commitStyles().forEach('cancel');\n  }\n\n  revert() {\n    // NOTE: We need a better way to revert the transforms, since right now the entire transform property value is reverted,\n    // This means if you have multiple animations animating different transforms on the same target,\n    // reverting one of them will also override the transform property of the other animations.\n    // A better approach would be to store the original custom property values is they exist instead of the entire transform value,\n    // and update the CSS variables with the orignal value\n    this.cancel().targets.forEach(($el, i) => {\n      const targetStyle = $el.style;\n      const targetInlineStyles = this._inlineStyles[i];\n      for (let name in targetInlineStyles) {\n        const originalInlinedValue = targetInlineStyles[name];\n        if (isUnd(originalInlinedValue) || originalInlinedValue === emptyString) {\n          targetStyle.removeProperty(toLowerCase(name));\n        } else {\n          targetStyle[name] = originalInlinedValue;\n        }\n      }\n      // Remove style attribute if empty\n      if ($el.getAttribute('style') === emptyString) $el.removeAttribute('style');\n    });\n    return this;\n  }\n\n  /**\n   * @typedef {this & {then: null}} ResolvedWAAPIAnimation\n   */\n\n  /**\n   * @param  {Callback<ResolvedWAAPIAnimation>} [callback]\n   * @return Promise<this>\n   */\n  then(callback = noop) {\n    const then = this.then;\n    const onResolve = () => {\n      this.then = null;\n      callback(/** @type {ResolvedWAAPIAnimation} */(this));\n      this.then = then;\n      this._resolve = noop;\n    };\n    return new Promise(r => {\n      this._resolve = () => r(onResolve());\n      if (this.completed) this._resolve();\n      return this;\n    });\n  }\n}\n\nconst waapi = {\n/**\n * @param {DOMTargetsParam} targets\n * @param {WAAPIAnimationParams} params\n * @return {WAAPIAnimation}\n */\n  animate: (targets, params) => new WAAPIAnimation(targets, params),\n  convertEase: easingToLinear\n};\n\nexport { WAAPIAnimation, waapi };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,KAAK,EAAEC,KAAK,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACjI,SAASC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AACnD,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,mBAAmB;AAC9D,SAASC,SAAS,EAAEC,eAAe,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,yBAAyB,EAAEC,WAAW,EAAEC,CAAC,QAAQ,mBAAmB;AAClJ,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,iBAAiB,QAAQ,kBAAkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGA,CAACC,EAAE,EAAEC,OAAO,GAAG,GAAG,KAAK;EAC5C,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,OAAO,EAAEE,CAAC,EAAE,EAAED,MAAM,CAACE,IAAI,CAACzB,KAAK,CAACqB,EAAE,CAACG,CAAC,GAAGF,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;EACzE,OAAO,UAAUC,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC,GAAG;AACvC,CAAC;AAED,MAAMC,iBAAiB,GAAG,CAAC,CAAC;;AAE5B;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;EACjC,IAAIC,UAAU,GAAGH,iBAAiB,CAACE,IAAI,CAAC;EACxC,IAAIC,UAAU,EAAE,OAAOA,UAAU;EACjCA,UAAU,GAAG,QAAQ;EACrB,IAAI7B,KAAK,CAAC4B,IAAI,CAAC,EAAE;IACf,IACElC,gBAAgB,CAACkC,IAAI,EAAE,QAAQ,CAAC,IAChClC,gBAAgB,CAACkC,IAAI,EAAE,QAAQ,CAAC,IAChClC,gBAAgB,CAACkC,IAAI,EAAE,OAAO,CAAC,IAC/BlC,gBAAgB,CAACkC,IAAI,EAAE,MAAM,CAAC,EAC9B;MACAC,UAAU,GAAGD,IAAI;IACnB,CAAC,MAAM,IAAIlC,gBAAgB,CAACkC,IAAI,EAAE,QAAQ,CAAC,EAAE;MAC3CC,UAAU,GAAG/B,WAAW,CAAC8B,IAAI,CAAC;IAChC,CAAC,MAAM;MACL,MAAME,MAAM,GAAGb,eAAe,CAACW,IAAI,CAAC;MACpC,IAAI3B,KAAK,CAAC6B,MAAM,CAAC,EAAED,UAAU,GAAGC,MAAM,KAAKd,IAAI,GAAG,QAAQ,GAAGG,cAAc,CAACW,MAAM,CAAC;IACrF;IACA;IACAJ,iBAAiB,CAACE,IAAI,CAAC,GAAGC,UAAU;EACtC,CAAC,MAAM,IAAI5B,KAAK,CAAC2B,IAAI,CAAC,EAAE;IACtB,MAAMG,MAAM,GAAGZ,cAAc,CAACS,IAAI,CAAC;IACnC,IAAIG,MAAM,EAAEF,UAAU,GAAGE,MAAM;EACjC,CAAC,MAAM,IAAI,qBAAsBH,IAAI,CAAEA,IAAI,EAAE;IAC3CC,UAAU,GAAGV,cAAc,CAAC,qBAAsBS,IAAI,CAAEA,IAAI,CAAC;EAC/D;EACA,OAAOC,UAAU;AACnB,CAAC;AAED,MAAMG,oBAAoB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC5C,MAAMC,yBAAyB,GAAG,CAChC,aAAa,EACb,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,KAAK,EACL,OAAO,EACP,QAAQ,EACR,MAAM,EACN,aAAa,EACb,UAAU,EACV,cAAc,EACd,GAAGD,oBAAoB,CACxB;AAED,MAAME,yBAAyB,GAAG,aAAc,CAAC,MAAM,CAAC,GAAGF,oBAAoB,EAAE,GAAGvB,eAAe,CAAC0B,MAAM,CAACC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIF,CAAC,CAACG,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAEnK,IAAIE,8BAA8B,GAAG,IAAI;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,EAAErB,CAAC,EAAEsB,aAAa,KAAK;EACtE;EACA,IAAIC,CAAC,GAAG9C,KAAK,CAAC2C,KAAK,CAAC,GAAGA,KAAK,GAAGpC,gBAAgB,CAAC,kBAAmBoC,KAAK,EAAGC,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC;EACjG,IAAI,CAAC3C,KAAK,CAAC4C,CAAC,CAAC,EAAE,OAAOA,CAAC;EACvB,IAAIb,yBAAyB,CAACc,QAAQ,CAACL,QAAQ,CAAC,IAAIhD,gBAAgB,CAACgD,QAAQ,EAAE,WAAW,CAAC,EAAE,OAAO,GAAGI,CAAC,IAAI;EAC5G,IAAIpD,gBAAgB,CAACgD,QAAQ,EAAE,QAAQ,CAAC,IAAIhD,gBAAgB,CAACgD,QAAQ,EAAE,MAAM,CAAC,EAAE,OAAO,GAAGI,CAAC,KAAK;EAChG,OAAO,GAAGA,CAAC,EAAE;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,yBAAyB,GAAGA,CAACJ,GAAG,EAAEF,QAAQ,EAAEO,IAAI,EAAEC,EAAE,EAAE3B,CAAC,EAAEsB,aAAa,KAAK;EAC/E;EACA,IAAIM,UAAU,GAAG,GAAG;EACpB,MAAMC,UAAU,GAAG,CAAC3D,KAAK,CAACyD,EAAE,CAAC,GAAGT,mBAAmB,CAACC,QAAQ,EAAEQ,EAAE,EAAEN,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC,GAAGQ,gBAAgB,CAACT,GAAG,CAAC,CAACF,QAAQ,CAAC;EAC1H,IAAI,CAACjD,KAAK,CAACwD,IAAI,CAAC,EAAE;IAChB,MAAMK,YAAY,GAAGb,mBAAmB,CAACC,QAAQ,EAAEO,IAAI,EAAEL,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC;IAC/EM,UAAU,GAAG,CAACG,YAAY,EAAEF,UAAU,CAAC;EACzC,CAAC,MAAM;IACLD,UAAU,GAAGtD,KAAK,CAACqD,EAAE,CAAC,GAAGA,EAAE,CAACK,GAAG,CAAC,CAAC,kBAAkBT,CAAC,KAAKL,mBAAmB,CAACC,QAAQ,EAAEI,CAAC,EAAEF,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC,CAAC,GAAGO,UAAU;EAChI;EACA,OAAOD,UAAU;AACnB,CAAC;AAED,MAAMK,cAAc,CAAC;EACrB;AACA;AACA;AACA;EACEC,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAE3B,IAAIxD,KAAK,CAACyD,OAAO,EAAEzD,KAAK,CAACyD,OAAO,CAACC,QAAQ,CAAC,IAAI,CAAC;;IAE/C;IACA,IAAIrE,KAAK,CAACgD,8BAA8B,CAAC,EAAE;MACzC,IAAIhC,SAAS,KAAKf,KAAK,CAACqE,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,cAAc,CAACC,IAAI,CAACH,GAAG,EAAE,kBAAkB,CAAC,CAAC,EAAE;QACrFtB,8BAA8B,GAAG,KAAK;MACxC,CAAC,MAAM;QACL/B,eAAe,CAACyD,OAAO,CAAC9B,CAAC,IAAI;UAC3B,MAAM+B,MAAM,GAAGzE,gBAAgB,CAAC0C,CAAC,EAAE,MAAM,CAAC;UAC1C,MAAMgC,OAAO,GAAG1E,gBAAgB,CAAC0C,CAAC,EAAE,OAAO,CAAC;UAC5C,MAAMiC,QAAQ,GAAG3E,gBAAgB,CAAC0C,CAAC,EAAE,QAAQ,CAAC;UAC9C,MAAMkC,WAAW,GAAG5E,gBAAgB,CAAC0C,CAAC,EAAE,WAAW,CAAC;UACpD,MAAMmC,OAAO,GAAGF,QAAQ,IAAIF,MAAM;UAClC,MAAMK,MAAM,GAAGD,OAAO,GAAG,SAAS,GAAGH,OAAO,GAAG,UAAU,GAAGE,WAAW,GAAG,qBAAqB,GAAG,GAAG;UACrG,IAAI;YACFR,GAAG,CAACW,gBAAgB,CAAC;cACnBC,IAAI,EAAE,IAAI,GAAGtC,CAAC;cACdoC,MAAM;cACNG,QAAQ,EAAE,KAAK;cACfC,YAAY,EAAEN,WAAW,GAAG,KAAK,GAAGC,OAAO,GAAG,MAAM,GAAGH,OAAO,GAAG,GAAG,GAAG;YACzE,CAAC,CAAC;UACJ,CAAC,CAAC,MAAM,CAAC;QAAS,CAAC,CAAC;QACtB5B,8BAA8B,GAAG,IAAI;MACvC;IACF;IAEA,MAAMqC,aAAa,GAAGxE,eAAe,CAACqD,OAAO,CAAC;IAC9C,MAAMb,aAAa,GAAGgC,aAAa,CAACC,MAAM;IAE1C,IAAI,CAACjC,aAAa,EAAE;MAClBkC,OAAO,CAACC,IAAI,CAAC,+GAA+G,CAAC;IAC/H;IAEA,MAAMpD,IAAI,GAAGtB,QAAQ,CAACqD,MAAM,CAAC/B,IAAI,EAAED,gBAAgB,CAACvB,OAAO,CAAC6E,QAAQ,CAACrD,IAAI,CAAC,CAAC;IAC3E,MAAMsD,MAAM,GAAG,qBAAsBtD,IAAI,CAAEA,IAAI,IAAIA,IAAI;IACvD,MAAMuD,QAAQ,GAAG7E,QAAQ,CAACqD,MAAM,CAACwB,QAAQ,EAAE/E,OAAO,CAAC6E,QAAQ,CAACE,QAAQ,CAAC;IACrE,MAAMC,MAAM,GAAGD,QAAQ,IAAI,6BAA8BA,QAAQ,CAAEE,IAAI,GAAGF,QAAQ,GAAG,KAAK;IAC1F,MAAMG,SAAS,GAAG3B,MAAM,CAAC2B,SAAS,IAAI,sBAAuB3B,MAAM,CAAC2B,SAAS,KAAM,IAAI;IACvF,MAAMC,QAAQ,GAAG5B,MAAM,CAAC4B,QAAQ,IAAI,sBAAuB5B,MAAM,CAAC4B,QAAQ,KAAM,IAAI;IACpF,MAAMC,IAAI,GAAGlF,QAAQ,CAACqD,MAAM,CAAC6B,IAAI,EAAEpF,OAAO,CAAC6E,QAAQ,CAACO,IAAI,CAAC;IACzD,MAAMC,UAAU,GAAG,qBAAuBD,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAKE,QAAQ,GAAIA,QAAQ,GAAGxF,KAAK,CAACsF,IAAI,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAE;IACtH;IACA,MAAMG,SAAS,GAAGL,SAAS,GAAGC,QAAQ,GAAG,mBAAmB,GAAG,WAAW,GAAGA,QAAQ,GAAG,SAAS,GAAG,QAAQ;IAC5G;IACA,MAAMK,IAAI,GAAG,MAAM,CAAC,CAAC;IACrB;IACA,MAAM7D,MAAM,GAAGJ,gBAAgB,CAACC,IAAI,CAAC;IACrC,MAAMiE,SAAS,GAAIzF,OAAO,CAACyF,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG9E,CAAE;;IAEnD;IACA,IAAI,CAAC2C,OAAO,GAAGmB,aAAa;IAC5B;IACA,IAAI,CAACiB,UAAU,GAAG,EAAE;IACpB;IACA,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B;IACA,IAAI,CAACC,UAAU,GAAGrC,MAAM,CAACqC,UAAU,KAAI,wCAAwC,sBAAuB5F,OAAO,CAAC6E,QAAQ,CAACe,UAAU,CAAE;IACnI;IACA,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB;IACA,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B;IACA,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;IACA,IAAI,CAACC,MAAM,GAAG,CAACjB,QAAQ,IAAIC,MAAM,KAAK,KAAK;IAC3C;IACA,IAAI,CAACG,QAAQ,GAAGA,QAAQ;IACxB;IACA,IAAI,CAACc,OAAO,GAAG/F,QAAQ,CAACqD,MAAM,CAAC0C,OAAO,EAAEjG,OAAO,CAAC6E,QAAQ,CAACoB,OAAO,CAAC;IACjE;IACA,IAAI,CAAClB,QAAQ,GAAGA,QAAQ;IACxB;IACA,IAAI,CAACmB,MAAM,GAAGhG,QAAQ,CAACqD,MAAM,CAAC4C,YAAY,EAAEnG,OAAO,CAAC6E,QAAQ,CAACsB,YAAY,CAAC;IAC1E;IACA,IAAI,CAACC,QAAQ,GAAG9F,IAAI,CAAC,CAAC;IACtB;IACA,IAAI,CAAC+F,UAAU,GAAG,CAAC;IACnB;IACA,IAAI,CAACC,aAAa,GAAG,EAAE;IAEvB7B,aAAa,CAACX,OAAO,CAAC,CAACtB,GAAG,EAAErB,CAAC,KAAK;MAEhC,MAAMoF,gBAAgB,GAAG/D,GAAG,CAACjC,gBAAgB,CAAC;MAC9C,MAAMiG,uBAAuB,GAAG1E,yBAAyB,CAACG,IAAI,CAACD,CAAC,IAAIuB,MAAM,CAACK,cAAc,CAAC5B,CAAC,CAAC,CAAC;MAC7F,MAAMyE,OAAO,GAAGjE,GAAG,CAACkE,KAAK;MACzB,MAAMC,YAAY,GAAG,IAAI,CAACL,aAAa,CAACnF,CAAC,CAAC,GAAG,CAAC,CAAC;;MAE/C;MACA,MAAM0E,QAAQ,GAAG,CAACf,MAAM,GAAG,qBAAsBA,MAAM,CAAE8B,gBAAgB,GAAGzG,gBAAgB,CAACD,QAAQ,CAACqD,MAAM,CAACsC,QAAQ,EAAE7F,OAAO,CAAC6E,QAAQ,CAACgB,QAAQ,CAAC,EAAErD,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC,IAAIgD,SAAS;MACtL;MACA,MAAMoB,KAAK,GAAG1G,gBAAgB,CAACD,QAAQ,CAACqD,MAAM,CAACsD,KAAK,EAAE7G,OAAO,CAAC6E,QAAQ,CAACgC,KAAK,CAAC,EAAErE,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC,GAAGgD,SAAS;MACjH;MACA,MAAMqB,SAAS,GAAG,iCAAkC5G,QAAQ,CAACqD,MAAM,CAACwD,WAAW,EAAE,SAAS,CAAE;MAE5F,KAAK,IAAIzC,IAAI,IAAIf,MAAM,EAAE;QACvB,IAAI,CAAChE,KAAK,CAAC+E,IAAI,CAAC,EAAE;QAClB;QACA,MAAM0C,SAAS,GAAG,CAAC,CAAC;QACpB;QACA,MAAMC,WAAW,GAAG;UAAE5B,UAAU;UAAEE,SAAS;UAAEC,IAAI;UAAE7D,MAAM;UAAEkE,QAAQ;UAAEgB,KAAK;UAAEC;QAAU,CAAC;QACvF,MAAMI,aAAa,GAAG3D,MAAM,CAACe,IAAI,CAAC;QAClC,MAAM6C,2BAA2B,GAAGX,uBAAuB,GAAGnG,eAAe,CAACsC,QAAQ,CAAC2B,IAAI,CAAC,GAAGA,IAAI,GAAG9D,eAAe,CAAC4G,GAAG,CAAC9C,IAAI,CAAC,GAAG,KAAK;QAEvI,MAAM+C,SAAS,GAAGF,2BAA2B,GAAG,WAAW,GAAG7C,IAAI;QAClE,IAAI,CAACqC,YAAY,CAACU,SAAS,CAAC,EAAE;UAC5BV,YAAY,CAACU,SAAS,CAAC,GAAGZ,OAAO,CAACY,SAAS,CAAC;QAC9C;QAEA,IAAIC,mBAAmB;QACvB,IAAI9H,KAAK,CAAC0H,aAAa,CAAC,EAAE;UACxB,MAAMK,YAAY,GAAG,gCAAiCL,aAAc;UACpE,MAAMM,gBAAgB,GAAGtH,QAAQ,CAACqH,YAAY,CAAC/F,IAAI,EAAEA,IAAI,CAAC;UAC1D,MAAMiG,kBAAkB,GAAG,qBAAsBD,gBAAgB,CAAEhG,IAAI,IAAIgG,gBAAgB;UAC3F,MAAM1E,EAAE,GAAG,gCAAiCyE,YAAY,CAAEzE,EAAE;UAC5D,MAAMD,IAAI,GAAG,gCAAiC0E,YAAY,CAAE1E,IAAI;UAChE;UACAoE,WAAW,CAACpB,QAAQ,GAAG,CAAC4B,kBAAkB,GAAG,qBAAsBA,kBAAkB,CAAEb,gBAAgB,GAAGzG,gBAAgB,CAACD,QAAQ,CAACqH,YAAY,CAAC1B,QAAQ,EAAEA,QAAQ,CAAC,EAAErD,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC,IAAIgD,SAAS;UACzM;UACAwB,WAAW,CAACJ,KAAK,GAAG1G,gBAAgB,CAACD,QAAQ,CAACqH,YAAY,CAACV,KAAK,EAAEA,KAAK,CAAC,EAAErE,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC,GAAGgD,SAAS;UAC5G;UACAwB,WAAW,CAACH,SAAS,GAAG,iCAAkC5G,QAAQ,CAACqH,YAAY,CAACR,WAAW,EAAED,SAAS,CAAE;UACxG;UACAG,WAAW,CAACtF,MAAM,GAAGJ,gBAAgB,CAACiG,gBAAgB,CAAC;UACvDF,mBAAmB,GAAG1E,yBAAyB,CAACJ,GAAG,EAAE8B,IAAI,EAAEzB,IAAI,EAAEC,EAAE,EAAE3B,CAAC,EAAEsB,aAAa,CAAC;UACtF,IAAI0E,2BAA2B,EAAE;YAC/BH,SAAS,CAAC,KAAKG,2BAA2B,EAAE,CAAC,GAAGG,mBAAmB;YACnEf,gBAAgB,CAACY,2BAA2B,CAAC,GAAGG,mBAAmB;UACrE,CAAC,MAAM;YACLN,SAAS,CAAC1C,IAAI,CAAC,GAAG1B,yBAAyB,CAACJ,GAAG,EAAE8B,IAAI,EAAEzB,IAAI,EAAEC,EAAE,EAAE3B,CAAC,EAAEsB,aAAa,CAAC;UACpF;UACA3B,iBAAiB,CAAC,IAAI,EAAE0B,GAAG,EAAE8B,IAAI,EAAE0C,SAAS,EAAEC,WAAW,CAAC;UAC1D,IAAI,CAAC5H,KAAK,CAACwD,IAAI,CAAC,EAAE;YAChB,IAAI,CAACsE,2BAA2B,EAAE;cAChCV,OAAO,CAACnC,IAAI,CAAC,GAAG0C,SAAS,CAAC1C,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC,MAAM;cACL,MAAMoD,GAAG,GAAG,KAAKP,2BAA2B,EAAE;cAC9CV,OAAO,CAACkB,WAAW,CAACD,GAAG,EAAEV,SAAS,CAACU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C;UACF;QACF,CAAC,MAAM;UACLJ,mBAAmB,GAAG7H,KAAK,CAACyH,aAAa,CAAC,GACpBA,aAAa,CAAC/D,GAAG,CAAC,CAAC,kBAAkBT,CAAC,KAAKL,mBAAmB,CAACiC,IAAI,EAAE5B,CAAC,EAAEF,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC,CAAC,GAC/FJ,mBAAmB,CAACiC,IAAI,EAAE,kBAAmB4C,aAAa,EAAG1E,GAAG,EAAErB,CAAC,EAAEsB,aAAa,CAAC;UACzG,IAAI0E,2BAA2B,EAAE;YAC/BH,SAAS,CAAC,KAAKG,2BAA2B,EAAE,CAAC,GAAGG,mBAAmB;YACnEf,gBAAgB,CAACY,2BAA2B,CAAC,GAAGG,mBAAmB;UACrE,CAAC,MAAM;YACLN,SAAS,CAAC1C,IAAI,CAAC,GAAGgD,mBAAmB;UACvC;UACAxG,iBAAiB,CAAC,IAAI,EAAE0B,GAAG,EAAE8B,IAAI,EAAE0C,SAAS,EAAEC,WAAW,CAAC;QAC5D;MACF;MACA,IAAIT,uBAAuB,EAAE;QAC3B,IAAIoB,UAAU,GAAGlH,WAAW;QAC5B,KAAK,IAAIsB,CAAC,IAAIuE,gBAAgB,EAAE;UAC9BqB,UAAU,IAAI,GAAGnH,yBAAyB,CAACuB,CAAC,CAAC,SAASA,CAAC,KAAK;QAC9D;QACAyE,OAAO,CAACoB,SAAS,GAAGD,UAAU;MAChC;IACF,CAAC,CAAC;IAEF,IAAI5C,MAAM,EAAE;MACV,6BAA8B,IAAI,CAACD,QAAQ,CAAEE,IAAI,CAAC,IAAI,CAAC;IACzD;EACF;;EAEA;AACF;AACA;AACA;;EAEE;AACF;AACA;AACA;EACEnB,OAAOA,CAACgE,QAAQ,EAAE;IAChB,MAAMC,EAAE,GAAGnI,KAAK,CAACkI,QAAQ,CAAC,GAAG,CAAC,mCAAmCE,CAAC,KAAKA,CAAC,CAACF,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ;IAC/F,IAAI,CAACpC,UAAU,CAAC5B,OAAO,CAACiE,EAAE,CAAC;IAC3B,OAAO,IAAI;EACb;EAEA,IAAIE,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAAC/B,MAAM;EACpB;EAEA,IAAI+B,KAAKA,CAACA,KAAK,EAAE;IACf,IAAI,CAAC/B,MAAM,GAAG,CAAC+B,KAAK;IACpB,IAAI,CAACnE,OAAO,CAACoE,IAAI,IAAIA,IAAI,CAAC/B,YAAY,GAAG8B,KAAK,CAAC;EACjD;EAEA,IAAIE,WAAWA,CAAA,EAAG;IAChB,MAAMxC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;IAC9C,MAAMF,SAAS,GAAGzF,OAAO,CAACyF,SAAS;IACnC,OAAO,IAAI,CAACM,SAAS,GAAG,IAAI,CAACF,QAAQ,GAAGF,gBAAgB,GAAG,CAACA,gBAAgB,CAACwC,WAAW,IAAI1C,SAAS,KAAK,CAAC,GAAG,CAAC,GAAGA,SAAS,CAAC,GAAG,CAAC;EAClI;EAEA,IAAI0C,WAAWA,CAACC,IAAI,EAAE;IACpB,MAAMpG,CAAC,GAAGoG,IAAI,IAAIpI,OAAO,CAACyF,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG9E,CAAC,CAAC;IAClD,IAAI,CAACmD,OAAO,CAACoE,IAAI,IAAI;MACnB;MACA;MACA;MACA;MACA,IAAI,CAAC,IAAI,CAACjC,OAAO,IAAIjE,CAAC,IAAI,IAAI,CAAC6D,QAAQ,EAAEqC,IAAI,CAACG,IAAI,CAAC,CAAC;MACpDH,IAAI,CAACC,WAAW,GAAGnG,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA,IAAIsG,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACH,WAAW,GAAG,IAAI,CAACtC,QAAQ;EACzC;EAEA,IAAIyC,QAAQA,CAACA,QAAQ,EAAE;IACrB,IAAI,CAACxE,OAAO,CAACoE,IAAI,IAAIA,IAAI,CAACC,WAAW,GAAGG,QAAQ,GAAG,IAAI,CAACzC,QAAQ,IAAI,CAAC,CAAC;EACxE;EAEA0C,MAAMA,CAAA,EAAG;IACP,IAAI,CAAC,IAAI,CAACvC,MAAM,EAAE,OAAO,IAAI;IAC7B,IAAI,CAACA,MAAM,GAAG,KAAK;IACnB;IACA,OAAO,IAAI,CAAClC,OAAO,CAAC,MAAM,CAAC;EAC7B;EAEA0E,KAAKA,CAAA,EAAG;IACN,IAAI,IAAI,CAACxC,MAAM,EAAE,OAAO,IAAI;IAC5B,IAAI,CAACA,MAAM,GAAG,IAAI;IAClB,OAAO,IAAI,CAAClC,OAAO,CAAC,OAAO,CAAC;EAC9B;EAEAoB,SAASA,CAAA,EAAG;IACV,IAAI,CAACC,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;IAC9B,IAAI,CAACrB,OAAO,CAAC,SAAS,CAAC;IACvB,IAAI,IAAI,CAACkC,MAAM,EAAE,IAAI,CAAClC,OAAO,CAAC,OAAO,CAAC;IACtC,OAAO,IAAI;EACb;EAEAuE,IAAIA,CAAA,EAAG;IACL,IAAI,IAAI,CAAClD,QAAQ,EAAE,IAAI,CAACD,SAAS,CAAC,CAAC;IACnC,OAAO,IAAI,CAACqD,MAAM,CAAC,CAAC;EACtB;EAEAE,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACtD,QAAQ,EAAE,IAAI,CAACD,SAAS,CAAC,CAAC;IACpC,OAAO,IAAI,CAACqD,MAAM,CAAC,CAAC;EACtB;;EAED;AACD;AACA;AACA;EACEG,IAAIA,CAACN,IAAI,EAAEtC,aAAa,GAAG,KAAK,EAAE;IAChC,IAAIA,aAAa,EAAE,IAAI,CAACA,aAAa,GAAG,IAAI;IAC5C,IAAIsC,IAAI,GAAG,IAAI,CAACvC,QAAQ,EAAE,IAAI,CAACE,SAAS,GAAG,KAAK;IAChD,IAAI,CAACoC,WAAW,GAAGC,IAAI;IACvB,IAAI,CAACtC,aAAa,GAAG,KAAK;IAC1B,IAAI,IAAI,CAACE,MAAM,EAAE,IAAI,CAACwC,KAAK,CAAC,CAAC;IAC7B,OAAO,IAAI;EACb;EAEAG,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC5C,SAAS,GAAG,KAAK;IACtB,OAAO,IAAI,CAAC2C,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAACH,MAAM,CAAC,CAAC;EACpC;EAEAK,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAAC9E,OAAO,CAAC,cAAc,CAAC;EACrC;EAEA+E,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACH,IAAI,CAAC,IAAI,CAAC7C,QAAQ,CAAC;EACjC;EAEAiD,MAAMA,CAAA,EAAG;IACP,IAAI,CAAChD,aAAa,GAAG,IAAI,CAAC,CAAC;IAC3B,OAAO,IAAI,CAAC8C,YAAY,CAAC,CAAC,CAAC9E,OAAO,CAAC,QAAQ,CAAC;EAC9C;EAEAiF,MAAMA,CAAA,EAAG;IACP;IACA;IACA;IACA;IACA;IACA,IAAI,CAACD,MAAM,CAAC,CAAC,CAACxF,OAAO,CAACQ,OAAO,CAAC,CAACtB,GAAG,EAAErB,CAAC,KAAK;MACxC,MAAM6H,WAAW,GAAGxG,GAAG,CAACkE,KAAK;MAC7B,MAAMuC,kBAAkB,GAAG,IAAI,CAAC3C,aAAa,CAACnF,CAAC,CAAC;MAChD,KAAK,IAAImD,IAAI,IAAI2E,kBAAkB,EAAE;QACnC,MAAMC,oBAAoB,GAAGD,kBAAkB,CAAC3E,IAAI,CAAC;QACrD,IAAIjF,KAAK,CAAC6J,oBAAoB,CAAC,IAAIA,oBAAoB,KAAKxI,WAAW,EAAE;UACvEsI,WAAW,CAACG,cAAc,CAACzJ,WAAW,CAAC4E,IAAI,CAAC,CAAC;QAC/C,CAAC,MAAM;UACL0E,WAAW,CAAC1E,IAAI,CAAC,GAAG4E,oBAAoB;QAC1C;MACF;MACA;MACA,IAAI1G,GAAG,CAAC4G,YAAY,CAAC,OAAO,CAAC,KAAK1I,WAAW,EAAE8B,GAAG,CAAC6G,eAAe,CAAC,OAAO,CAAC;IAC7E,CAAC,CAAC;IACF,OAAO,IAAI;EACb;;EAEA;AACF;AACA;;EAEE;AACF;AACA;AACA;EACEC,IAAIA,CAACxB,QAAQ,GAAGxH,IAAI,EAAE;IACpB,MAAMgJ,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACtB,IAAI,CAACD,IAAI,GAAG,IAAI;MAChBxB,QAAQ,CAAC,qCAAsC,IAAK,CAAC;MACrD,IAAI,CAACwB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAAClD,QAAQ,GAAG9F,IAAI;IACtB,CAAC;IACD,OAAO,IAAIkJ,OAAO,CAACC,CAAC,IAAI;MACtB,IAAI,CAACrD,QAAQ,GAAG,MAAMqD,CAAC,CAACF,SAAS,CAAC,CAAC,CAAC;MACpC,IAAI,IAAI,CAACxD,SAAS,EAAE,IAAI,CAACK,QAAQ,CAAC,CAAC;MACnC,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;AACF;AAEA,MAAMsD,KAAK,GAAG;EACd;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAEA,CAACrG,OAAO,EAAEC,MAAM,KAAK,IAAIH,cAAc,CAACE,OAAO,EAAEC,MAAM,CAAC;EACjEqG,WAAW,EAAE7I;AACf,CAAC;AAED,SAASqC,cAAc,EAAEsG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}