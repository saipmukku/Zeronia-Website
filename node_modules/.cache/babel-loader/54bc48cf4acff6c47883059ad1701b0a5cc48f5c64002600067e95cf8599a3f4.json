{"ast":null,"code":"/**\n * Anime.js - utils - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { noop } from '../core/consts.js';\nimport * as number from './number.js';\n\n// Chain-able utilities\n\nconst numberUtils = number; // Needed to keep the import when bundling\n\nconst chainables = {};\n\n/**\n * @callback UtilityFunction\n * @param {...*} args\n * @return {Number|String}\n *\n * @param {UtilityFunction} fn\n * @param {Number} [last=0]\n * @return {function(...(Number|String)): function(Number|String): (Number|String)}\n */\nconst curry = (fn, last = 0) => (...args) => last ? v => fn(...args, v) : v => fn(v, ...args);\n\n/**\n * @param {Function} fn\n * @return {function(...(Number|String))}\n */\nconst chain = fn => {\n  return (...args) => {\n    const result = fn(...args);\n    return new Proxy(noop, {\n      apply: (_, __, [v]) => result(v),\n      get: (_, prop) => chain(/**@param {...Number|String} nextArgs */(...nextArgs) => {\n        const nextResult = chainables[prop](...nextArgs);\n        return (/**@type {Number|String} */v) => nextResult(result(v));\n      })\n    });\n  };\n};\n\n/**\n * @param {UtilityFunction} fn\n * @param {String} name\n * @param {Number} [right]\n * @return {function(...(Number|String)): UtilityFunction}\n */\nconst makeChainable = (name, fn, right = 0) => {\n  const chained = (...args) => (args.length < fn.length ? chain(curry(fn, right)) : fn)(...args);\n  if (!chainables[name]) chainables[name] = chained;\n  return chained;\n};\n\n/**\n * @typedef {Object} ChainablesMap\n * @property {ChainedClamp} clamp\n * @property {ChainedRound} round\n * @property {ChainedSnap} snap\n * @property {ChainedWrap} wrap\n * @property {ChainedLerp} lerp\n * @property {ChainedDamp} damp\n * @property {ChainedMapRange} mapRange\n * @property {ChainedRoundPad} roundPad\n * @property {ChainedPadStart} padStart\n * @property {ChainedPadEnd} padEnd\n * @property {ChainedDegToRad} degToRad\n * @property {ChainedRadToDeg} radToDeg\n */\n\n/**\n * @callback ChainedUtilsResult\n * @param {Number} value - The value to process through the chained operations\n * @return {Number} The processed result\n */\n\n/**\n * @typedef {ChainablesMap & ChainedUtilsResult} ChainableUtil\n */\n\n// Chainable\n\n/**\n * @callback ChainedRoundPad\n * @param {Number} decimalLength - Number of decimal places\n * @return {ChainableUtil}\n */\nconst roundPad = /** @type {typeof numberUtils.roundPad & ChainedRoundPad} */makeChainable('roundPad', numberUtils.roundPad);\n\n/**\n * @callback ChainedPadStart\n * @param {Number} totalLength - Target length\n * @param {String} padString - String to pad with\n * @return {ChainableUtil}\n */\nconst padStart = /** @type {typeof numberUtils.padStart & ChainedPadStart} */makeChainable('padStart', numberUtils.padStart);\n\n/**\n * @callback ChainedPadEnd\n * @param {Number} totalLength - Target length\n * @param {String} padString - String to pad with\n * @return {ChainableUtil}\n */\nconst padEnd = /** @type {typeof numberUtils.padEnd & ChainedPadEnd} */makeChainable('padEnd', numberUtils.padEnd);\n\n/**\n * @callback ChainedWrap\n * @param {Number} min - Minimum boundary\n * @param {Number} max - Maximum boundary\n * @return {ChainableUtil}\n */\nconst wrap = /** @type {typeof numberUtils.wrap & ChainedWrap} */makeChainable('wrap', numberUtils.wrap);\n\n/**\n * @callback ChainedMapRange\n * @param {Number} inLow - Input range minimum\n * @param {Number} inHigh - Input range maximum\n * @param {Number} outLow - Output range minimum\n * @param {Number} outHigh - Output range maximum\n * @return {ChainableUtil}\n */\nconst mapRange = /** @type {typeof numberUtils.mapRange & ChainedMapRange} */makeChainable('mapRange', numberUtils.mapRange);\n\n/**\n * @callback ChainedDegToRad\n * @return {ChainableUtil}\n */\nconst degToRad = /** @type {typeof numberUtils.degToRad & ChainedDegToRad} */makeChainable('degToRad', numberUtils.degToRad);\n\n/**\n * @callback ChainedRadToDeg\n * @return {ChainableUtil}\n */\nconst radToDeg = /** @type {typeof numberUtils.radToDeg & ChainedRadToDeg} */makeChainable('radToDeg', numberUtils.radToDeg);\n\n/**\n * @callback ChainedSnap\n * @param {Number|Array<Number>} increment - Step size or array of snap points\n * @return {ChainableUtil}\n */\nconst snap = /** @type {typeof numberUtils.snap & ChainedSnap} */makeChainable('snap', numberUtils.snap);\n\n/**\n * @callback ChainedClamp\n * @param {Number} min - Minimum boundary\n * @param {Number} max - Maximum boundary\n * @return {ChainableUtil}\n */\nconst clamp = /** @type {typeof numberUtils.clamp & ChainedClamp} */makeChainable('clamp', numberUtils.clamp);\n\n/**\n * @callback ChainedRound\n * @param {Number} decimalLength - Number of decimal places\n * @return {ChainableUtil}\n */\nconst round = /** @type {typeof numberUtils.round & ChainedRound} */makeChainable('round', numberUtils.round);\n\n/**\n * @callback ChainedLerp\n * @param {Number} start - Starting value\n * @param {Number} end - Ending value\n * @return {ChainableUtil}\n */\nconst lerp = /** @type {typeof numberUtils.lerp & ChainedLerp} */makeChainable('lerp', numberUtils.lerp, 1);\n\n/**\n * @callback ChainedDamp\n * @param {Number} start - Starting value\n * @param {Number} end - Target value\n * @param {Number} deltaTime - Delta time in ms\n * @return {ChainableUtil}\n */\nconst damp = /** @type {typeof numberUtils.damp & ChainedDamp} */makeChainable('damp', numberUtils.damp, 1);\nexport { clamp, damp, degToRad, lerp, mapRange, padEnd, padStart, radToDeg, round, roundPad, snap, wrap };","map":{"version":3,"names":["noop","number","numberUtils","chainables","curry","fn","last","args","v","chain","result","Proxy","apply","_","__","get","prop","nextArgs","nextResult","makeChainable","name","right","chained","length","roundPad","padStart","padEnd","wrap","mapRange","degToRad","radToDeg","snap","clamp","round","lerp","damp"],"sources":["/Users/mukku/Desktop/Work and Education/Projects/zeronia.org/node_modules/animejs/dist/modules/utils/chainable.js"],"sourcesContent":["/**\n * Anime.js - utils - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { noop } from '../core/consts.js';\nimport * as number from './number.js';\n\n// Chain-able utilities\n\nconst numberUtils = number; // Needed to keep the import when bundling\n\nconst chainables = {};\n\n/**\n * @callback UtilityFunction\n * @param {...*} args\n * @return {Number|String}\n *\n * @param {UtilityFunction} fn\n * @param {Number} [last=0]\n * @return {function(...(Number|String)): function(Number|String): (Number|String)}\n */\nconst curry = (fn, last = 0) => (...args) => last ? v => fn(...args, v) : v => fn(v, ...args);\n\n/**\n * @param {Function} fn\n * @return {function(...(Number|String))}\n */\nconst chain = fn => {\n   return (...args) => {\n    const result = fn(...args);\n    return new Proxy(noop, {\n      apply: (_, __, [v]) => result(v),\n      get: (_, prop) => chain(/**@param {...Number|String} nextArgs */(...nextArgs) => {\n        const nextResult = chainables[prop](...nextArgs);\n        return (/**@type {Number|String} */v) => nextResult(result(v));\n      })\n    });\n  }\n};\n\n/**\n * @param {UtilityFunction} fn\n * @param {String} name\n * @param {Number} [right]\n * @return {function(...(Number|String)): UtilityFunction}\n */\nconst makeChainable = (name, fn, right = 0) => {\n  const chained = (...args) => (args.length < fn.length ? chain(curry(fn, right)) : fn)(...args);\n  if (!chainables[name]) chainables[name] = chained;\n  return chained;\n};\n\n/**\n * @typedef {Object} ChainablesMap\n * @property {ChainedClamp} clamp\n * @property {ChainedRound} round\n * @property {ChainedSnap} snap\n * @property {ChainedWrap} wrap\n * @property {ChainedLerp} lerp\n * @property {ChainedDamp} damp\n * @property {ChainedMapRange} mapRange\n * @property {ChainedRoundPad} roundPad\n * @property {ChainedPadStart} padStart\n * @property {ChainedPadEnd} padEnd\n * @property {ChainedDegToRad} degToRad\n * @property {ChainedRadToDeg} radToDeg\n */\n\n/**\n * @callback ChainedUtilsResult\n * @param {Number} value - The value to process through the chained operations\n * @return {Number} The processed result\n */\n\n/**\n * @typedef {ChainablesMap & ChainedUtilsResult} ChainableUtil\n */\n\n// Chainable\n\n/**\n * @callback ChainedRoundPad\n * @param {Number} decimalLength - Number of decimal places\n * @return {ChainableUtil}\n */\nconst roundPad = /** @type {typeof numberUtils.roundPad & ChainedRoundPad} */(makeChainable('roundPad', numberUtils.roundPad));\n\n/**\n * @callback ChainedPadStart\n * @param {Number} totalLength - Target length\n * @param {String} padString - String to pad with\n * @return {ChainableUtil}\n */\nconst padStart = /** @type {typeof numberUtils.padStart & ChainedPadStart} */(makeChainable('padStart', numberUtils.padStart));\n\n/**\n * @callback ChainedPadEnd\n * @param {Number} totalLength - Target length\n * @param {String} padString - String to pad with\n * @return {ChainableUtil}\n */\nconst padEnd = /** @type {typeof numberUtils.padEnd & ChainedPadEnd} */(makeChainable('padEnd', numberUtils.padEnd));\n\n/**\n * @callback ChainedWrap\n * @param {Number} min - Minimum boundary\n * @param {Number} max - Maximum boundary\n * @return {ChainableUtil}\n */\nconst wrap = /** @type {typeof numberUtils.wrap & ChainedWrap} */(makeChainable('wrap', numberUtils.wrap));\n\n/**\n * @callback ChainedMapRange\n * @param {Number} inLow - Input range minimum\n * @param {Number} inHigh - Input range maximum\n * @param {Number} outLow - Output range minimum\n * @param {Number} outHigh - Output range maximum\n * @return {ChainableUtil}\n */\nconst mapRange = /** @type {typeof numberUtils.mapRange & ChainedMapRange} */(makeChainable('mapRange', numberUtils.mapRange));\n\n/**\n * @callback ChainedDegToRad\n * @return {ChainableUtil}\n */\nconst degToRad = /** @type {typeof numberUtils.degToRad & ChainedDegToRad} */(makeChainable('degToRad', numberUtils.degToRad));\n\n/**\n * @callback ChainedRadToDeg\n * @return {ChainableUtil}\n */\nconst radToDeg = /** @type {typeof numberUtils.radToDeg & ChainedRadToDeg} */(makeChainable('radToDeg', numberUtils.radToDeg));\n\n/**\n * @callback ChainedSnap\n * @param {Number|Array<Number>} increment - Step size or array of snap points\n * @return {ChainableUtil}\n */\nconst snap = /** @type {typeof numberUtils.snap & ChainedSnap} */(makeChainable('snap', numberUtils.snap));\n\n/**\n * @callback ChainedClamp\n * @param {Number} min - Minimum boundary\n * @param {Number} max - Maximum boundary\n * @return {ChainableUtil}\n */\nconst clamp = /** @type {typeof numberUtils.clamp & ChainedClamp} */(makeChainable('clamp', numberUtils.clamp));\n\n/**\n * @callback ChainedRound\n * @param {Number} decimalLength - Number of decimal places\n * @return {ChainableUtil}\n */\nconst round = /** @type {typeof numberUtils.round & ChainedRound} */(makeChainable('round', numberUtils.round));\n\n/**\n * @callback ChainedLerp\n * @param {Number} start - Starting value\n * @param {Number} end - Ending value\n * @return {ChainableUtil}\n */\nconst lerp = /** @type {typeof numberUtils.lerp & ChainedLerp} */(makeChainable('lerp', numberUtils.lerp, 1));\n\n/**\n * @callback ChainedDamp\n * @param {Number} start - Starting value\n * @param {Number} end - Target value\n * @param {Number} deltaTime - Delta time in ms\n * @return {ChainableUtil}\n */\nconst damp = /** @type {typeof numberUtils.damp & ChainedDamp} */(makeChainable('damp', numberUtils.damp, 1));\n\nexport { clamp, damp, degToRad, lerp, mapRange, padEnd, padStart, radToDeg, round, roundPad, snap, wrap };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}