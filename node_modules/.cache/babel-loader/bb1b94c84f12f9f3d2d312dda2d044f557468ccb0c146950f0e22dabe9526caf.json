{"ast":null,"code":"/**\n * Anime.js - animatable - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { compositionTypes, noop } from '../core/consts.js';\nimport { scope } from '../core/globals.js';\nimport { isUnd, isKey, stringStartsWith, isObj, mergeObjects, forEachChildren, isStr, isArr } from '../core/helpers.js';\nimport { JSAnimation } from '../animation/animation.js';\nimport { parseEase } from '../easings/eases/parser.js';\n\n/**\n * @import {\n * TargetsParam,\n * AnimatableParams,\n * AnimationParams,\n * TweenParamsOptions,\n * Tween,\n * AnimatableProperty,\n * AnimatableObject,\n * } from '../types/index.js';\n */\n\nclass Animatable {\n  /**\n   * @param {TargetsParam} targets\n   * @param {AnimatableParams} parameters\n   */\n  constructor(targets, parameters) {\n    if (scope.current) scope.current.register(this);\n    const beginHandler = () => {\n      if (this.callbacks.completed) this.callbacks.reset();\n      this.callbacks.play();\n    };\n    const pauseHandler = () => {\n      if (this.callbacks.completed) return;\n      let paused = true;\n      for (let name in this.animations) {\n        const anim = this.animations[name];\n        if (!anim.paused && paused) {\n          paused = false;\n          break;\n        }\n      }\n      if (paused) {\n        this.callbacks.complete();\n      }\n    };\n    /** @type {AnimationParams} */\n    const globalParams = {\n      onBegin: beginHandler,\n      onComplete: pauseHandler,\n      onPause: pauseHandler\n    };\n    /** @type {AnimationParams} */\n    const callbacksAnimationParams = {\n      v: 1,\n      autoplay: false\n    };\n    const properties = {};\n    this.targets = [];\n    this.animations = {};\n    /** @type {JSAnimation|null} */\n    this.callbacks = null;\n    if (isUnd(targets) || isUnd(parameters)) return;\n    for (let propName in parameters) {\n      const paramValue = parameters[propName];\n      if (isKey(propName)) {\n        properties[propName] = paramValue;\n      } else if (stringStartsWith(propName, 'on')) {\n        callbacksAnimationParams[propName] = paramValue;\n      } else {\n        globalParams[propName] = paramValue;\n      }\n    }\n    this.callbacks = new JSAnimation({\n      v: 0\n    }, callbacksAnimationParams);\n    for (let propName in properties) {\n      const propValue = properties[propName];\n      const isObjValue = isObj(propValue);\n      /** @type {TweenParamsOptions} */\n      let propParams = {};\n      let to = '+=0';\n      if (isObjValue) {\n        const unit = propValue.unit;\n        if (isStr(unit)) to += unit;\n      } else {\n        propParams.duration = propValue;\n      }\n      propParams[propName] = isObjValue ? mergeObjects({\n        to\n      }, propValue) : to;\n      const animParams = mergeObjects(globalParams, propParams);\n      animParams.composition = compositionTypes.replace;\n      animParams.autoplay = false;\n      const animation = this.animations[propName] = new JSAnimation(targets, animParams, null, 0, false).init();\n      if (!this.targets.length) this.targets.push(...animation.targets);\n      /** @type {AnimatableProperty} */\n      this[propName] = (to, duration, ease) => {\n        const tween = /** @type {Tween} */animation._head;\n        if (isUnd(to) && tween) {\n          const numbers = tween._numbers;\n          if (numbers && numbers.length) {\n            return numbers;\n          } else {\n            return tween._modifier(tween._number);\n          }\n        } else {\n          forEachChildren(animation, (/** @type {Tween} */tween) => {\n            if (isArr(to)) {\n              for (let i = 0, l = /** @type {Array} */to.length; i < l; i++) {\n                if (!isUnd(tween._numbers[i])) {\n                  tween._fromNumbers[i] = /** @type {Number} */tween._modifier(tween._numbers[i]);\n                  tween._toNumbers[i] = to[i];\n                }\n              }\n            } else {\n              tween._fromNumber = /** @type {Number} */tween._modifier(tween._number);\n              tween._toNumber = /** @type {Number} */to;\n            }\n            if (!isUnd(ease)) tween._ease = parseEase(ease);\n            tween._currentTime = 0;\n          });\n          if (!isUnd(duration)) animation.stretch(duration);\n          animation.reset(true).resume();\n          return this;\n        }\n      };\n    }\n  }\n  revert() {\n    for (let propName in this.animations) {\n      this[propName] = noop;\n      this.animations[propName].revert();\n    }\n    this.animations = {};\n    this.targets.length = 0;\n    if (this.callbacks) this.callbacks.revert();\n    return this;\n  }\n}\n\n/**\n * @param {TargetsParam} targets\n * @param {AnimatableParams} parameters\n * @return {AnimatableObject}\n */\nconst createAnimatable = (targets, parameters) => (/** @type {AnimatableObject} */new Animatable(targets, parameters));\nexport { Animatable, createAnimatable };","map":{"version":3,"names":["compositionTypes","noop","scope","isUnd","isKey","stringStartsWith","isObj","mergeObjects","forEachChildren","isStr","isArr","JSAnimation","parseEase","Animatable","constructor","targets","parameters","current","register","beginHandler","callbacks","completed","reset","play","pauseHandler","paused","name","animations","anim","complete","globalParams","onBegin","onComplete","onPause","callbacksAnimationParams","v","autoplay","properties","propName","paramValue","propValue","isObjValue","propParams","to","unit","duration","animParams","composition","replace","animation","init","length","push","ease","tween","_head","numbers","_numbers","_modifier","_number","i","l","_fromNumbers","_toNumbers","_fromNumber","_toNumber","_ease","_currentTime","stretch","resume","revert","createAnimatable"],"sources":["/Users/mukku/Desktop/Work and Education/Projects/zeronia.org/node_modules/animejs/dist/modules/animatable/animatable.js"],"sourcesContent":["/**\n * Anime.js - animatable - ESM\n * @version v4.2.2\n * @license MIT\n * @copyright 2025 - Julian Garnier\n */\n\nimport { compositionTypes, noop } from '../core/consts.js';\nimport { scope } from '../core/globals.js';\nimport { isUnd, isKey, stringStartsWith, isObj, mergeObjects, forEachChildren, isStr, isArr } from '../core/helpers.js';\nimport { JSAnimation } from '../animation/animation.js';\nimport { parseEase } from '../easings/eases/parser.js';\n\n/**\n * @import {\n * TargetsParam,\n * AnimatableParams,\n * AnimationParams,\n * TweenParamsOptions,\n * Tween,\n * AnimatableProperty,\n * AnimatableObject,\n * } from '../types/index.js';\n */\n\nclass Animatable {\n  /**\n   * @param {TargetsParam} targets\n   * @param {AnimatableParams} parameters\n   */\n  constructor(targets, parameters) {\n    if (scope.current) scope.current.register(this);\n    const beginHandler = () => {\n      if (this.callbacks.completed) this.callbacks.reset();\n      this.callbacks.play();\n    };\n    const pauseHandler = () => {\n      if (this.callbacks.completed) return;\n      let paused = true;\n      for (let name in this.animations) {\n        const anim = this.animations[name];\n        if (!anim.paused && paused) {\n          paused = false;\n          break;\n        }\n      }\n      if (paused) {\n        this.callbacks.complete();\n      }\n    };\n    /** @type {AnimationParams} */\n    const globalParams = {\n      onBegin: beginHandler,\n      onComplete: pauseHandler,\n      onPause: pauseHandler,\n    };\n    /** @type {AnimationParams} */\n    const callbacksAnimationParams = { v: 1, autoplay: false };\n    const properties = {};\n    this.targets = [];\n    this.animations = {};\n    /** @type {JSAnimation|null} */\n    this.callbacks = null;\n    if (isUnd(targets) || isUnd(parameters)) return;\n    for (let propName in parameters) {\n      const paramValue = parameters[propName];\n      if (isKey(propName)) {\n        properties[propName] = paramValue;\n      } else if (stringStartsWith(propName, 'on')) {\n        callbacksAnimationParams[propName] = paramValue;\n      } else {\n        globalParams[propName] = paramValue;\n      }\n    }\n    this.callbacks = new JSAnimation({ v: 0 }, callbacksAnimationParams);\n    for (let propName in properties) {\n      const propValue = properties[propName];\n      const isObjValue = isObj(propValue);\n      /** @type {TweenParamsOptions} */\n      let propParams = {};\n      let to = '+=0';\n      if (isObjValue) {\n        const unit = propValue.unit;\n        if (isStr(unit)) to += unit;\n      } else {\n        propParams.duration = propValue;\n      }\n      propParams[propName] = isObjValue ? mergeObjects({ to }, propValue) : to;\n      const animParams = mergeObjects(globalParams, propParams);\n      animParams.composition = compositionTypes.replace;\n      animParams.autoplay = false;\n      const animation = this.animations[propName] = new JSAnimation(targets, animParams, null, 0, false).init();\n      if (!this.targets.length) this.targets.push(...animation.targets);\n      /** @type {AnimatableProperty} */\n      this[propName] = (to, duration, ease) => {\n        const tween = /** @type {Tween} */(animation._head);\n        if (isUnd(to) && tween) {\n          const numbers = tween._numbers;\n          if (numbers && numbers.length) {\n            return numbers;\n          } else {\n            return tween._modifier(tween._number);\n          }\n        } else {\n          forEachChildren(animation, (/** @type {Tween} */tween) => {\n            if (isArr(to)) {\n              for (let i = 0, l = /** @type {Array} */(to).length; i < l; i++) {\n                if (!isUnd(tween._numbers[i])) {\n                  tween._fromNumbers[i] = /** @type {Number} */(tween._modifier(tween._numbers[i]));\n                  tween._toNumbers[i] = to[i];\n                }\n              }\n            } else {\n              tween._fromNumber = /** @type {Number} */(tween._modifier(tween._number));\n              tween._toNumber = /** @type {Number} */(to);\n            }\n            if (!isUnd(ease)) tween._ease = parseEase(ease);\n            tween._currentTime = 0;\n          });\n          if (!isUnd(duration)) animation.stretch(duration);\n          animation.reset(true).resume();\n          return this;\n        }\n      };\n    }\n  }\n\n  revert() {\n    for (let propName in this.animations) {\n      this[propName] = noop;\n      this.animations[propName].revert();\n    }\n    this.animations = {};\n    this.targets.length = 0;\n    if (this.callbacks) this.callbacks.revert();\n    return this;\n  }\n}\n\n/**\n * @param {TargetsParam} targets\n * @param {AnimatableParams} parameters\n * @return {AnimatableObject}\n */\nconst createAnimatable = (targets, parameters) => /** @type {AnimatableObject} */ (new Animatable(targets, parameters));\n\nexport { Animatable, createAnimatable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}